<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20193.19.0821.2225                               -->
<workbook original-version='18.1' source-build='2019.3.0 (20193.19.0821.2225)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='transactions+ (sales)' inline='true' name='federated.1o61bz40zqzt6f13b749z0lja0j3' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.0dmd1nb1tmrryw0ztbups07kekdb'>
            <connection class='mysql' dbname='sales' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[transactions].[product_code]' />
              <expression op='[products].[product_code]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[transactions].[market_code]' />
                <expression op='[markets].[markets_code]' />
              </expression>
            </clause>
            <relation join='inner' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[transactions].[order_date]' />
                  <expression op='[date].[date]' />
                </expression>
              </clause>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[transactions].[customer_code]' />
                    <expression op='[customers].[customer_code]' />
                  </expression>
                </clause>
                <relation connection='mysql.0dmd1nb1tmrryw0ztbups07kekdb' name='transactions' table='[transactions]' type='table' />
                <relation connection='mysql.0dmd1nb1tmrryw0ztbups07kekdb' name='customers' table='[customers]' type='table' />
              </relation>
              <relation connection='mysql.0dmd1nb1tmrryw0ztbups07kekdb' name='date' table='[date]' type='table' />
            </relation>
            <relation connection='mysql.0dmd1nb1tmrryw0ztbups07kekdb' name='markets' table='[markets]' type='table' />
          </relation>
          <relation connection='mysql.0dmd1nb1tmrryw0ztbups07kekdb' name='products' table='[products]' type='table' />
        </relation>
        <cols>
          <map key='[cost_price]' value='[transactions].[cost_price]' />
          <map key='[currency]' value='[transactions].[currency]' />
          <map key='[custmer_name]' value='[customers].[custmer_name]' />
          <map key='[customer_code (customers)]' value='[customers].[customer_code]' />
          <map key='[customer_code]' value='[transactions].[customer_code]' />
          <map key='[customer_type]' value='[customers].[customer_type]' />
          <map key='[cy_date]' value='[date].[cy_date]' />
          <map key='[date]' value='[date].[date]' />
          <map key='[date_yy_mmm]' value='[date].[date_yy_mmm]' />
          <map key='[market_code]' value='[transactions].[market_code]' />
          <map key='[markets_code]' value='[markets].[markets_code]' />
          <map key='[markets_name]' value='[markets].[markets_name]' />
          <map key='[month_name]' value='[date].[month_name]' />
          <map key='[order_date]' value='[transactions].[order_date]' />
          <map key='[product_code (products)]' value='[products].[product_code]' />
          <map key='[product_code]' value='[transactions].[product_code]' />
          <map key='[product_type]' value='[products].[product_type]' />
          <map key='[profit_margin]' value='[transactions].[profit_margin]' />
          <map key='[profit_margin_percentage]' value='[transactions].[profit_margin_percentage]' />
          <map key='[sales_amount]' value='[transactions].[sales_amount]' />
          <map key='[sales_qty]' value='[transactions].[sales_qty]' />
          <map key='[year]' value='[date].[year]' />
          <map key='[zone]' value='[markets].[zone]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>product_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_code]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>product_code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_code]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>customer_code</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>market_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[market_code]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>market_code</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[order_date]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>order_date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sales_qty</remote-name>
            <remote-type>3</remote-type>
            <local-name>[sales_qty]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>sales_qty</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sales_amount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sales_amount]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>sales_amount</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>currency</remote-name>
            <remote-type>130</remote-type>
            <local-name>[currency]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>currency</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>profit_margin_percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[profit_margin_percentage]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>profit_margin_percentage</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>profit_margin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[profit_margin]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>profit_margin</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cost_price]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>cost_price</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_code (customers)]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>customer_code</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>custmer_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[custmer_name]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>custmer_name</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_type]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>customer_type</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>16</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cy_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[cy_date]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>cy_date</remote-alias>
            <ordinal>17</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[month_name]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>month_name</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_yy_mmm</remote-name>
            <remote-type>130</remote-type>
            <local-name>[date_yy_mmm]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>date_yy_mmm</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>markets_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[markets_code]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>markets_code</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>markets_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[markets_name]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>markets_name</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zone</remote-name>
            <remote-type>130</remote-type>
            <local-name>[zone]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>zone</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_code (products)]</local-name>
            <parent-name>[products]</parent-name>
            <remote-alias>product_code</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_type]</local-name>
            <parent-name>[products]</parent-name>
            <remote-alias>product_type</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Normalized amount' datatype='real' name='[Calculation_103301379542614016]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [currency] == &apos;USD&apos; THEN [sales_amount]*75 ELSE [sales_amount] END' />
      </column>
      <column caption='Blank' datatype='string' name='[Calculation_103301379554488321]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&apos;&apos;' />
      </column>
      <column caption='Profit margin % calculated' datatype='real' name='[Calculation_103301379613048834]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([profit_margin])/ SUM([Calculation_103301379542614016])' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
      <column datatype='string' name='[customer_type]' role='dimension' type='nominal' />
      <column datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
      <column datatype='string' name='[markets_code]' role='dimension' type='nominal' />
      <column datatype='string' name='[markets_name]' role='dimension' type='nominal' />
      <column datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
      <column datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
      <column datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_103301379542614016]' derivation='Sum' name='[pcto:sum:Calculation_103301379542614016:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_103301379542614016]' derivation='Sum' name='[sum:Calculation_103301379542614016:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_103301379613048834]' derivation='User' name='[usr:Calculation_103301379613048834:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Blank,MONTH(cy_date))' hidden='true' name='[Action (Blank,MONTH(cy_date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_103301379554488321]' />
          <groupfilter function='level-members' level='[mn:cy_date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Blank,YEAR(cy_date))' hidden='true' name='[Action (Blank,YEAR(cy_date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_103301379554488321]' />
          <groupfilter function='level-members' level='[yr:cy_date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(cy_date),MONTH(cy_date))' hidden='true' name='[Action (YEAR(cy_date),MONTH(cy_date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:cy_date:ok]' />
          <groupfilter function='level-members' level='[mn:cy_date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (custmer_name)' hidden='true' name='[Action (custmer_name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[custmer_name]' />
        </groupfilter>
      </group>
      <group caption='Action (customer_type)' hidden='true' name='[Action (customer_type)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[customer_type]' />
        </groupfilter>
      </group>
      <group caption='Action (markets_name)' hidden='true' name='[Action (markets_name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[markets_name]' />
        </groupfilter>
      </group>
      <group caption='Action (product_code (products))' hidden='true' name='[Action (product_code (products))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[product_code (products)]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.615854' measure-ordering='alphabetic' measure-percentage='0.384146' rowDisplayCount='100' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1o61bz40zqzt6f13b749z0lja0j3].[usr:Calculation_103301379613048834:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1o61bz40zqzt6f13b749z0lja0j3].[pcto:sum:Calculation_103301379542614016:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1o61bz40zqzt6f13b749z0lja0j3].[sum:Calculation_103301379542614016:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='customer_code (customers)' />
        <field-sort-custom-order field='custmer_name' />
        <field-sort-custom-order field='customer_type' />
        <field-sort-custom-order field='date' />
        <field-sort-custom-order field='cy_date' />
        <field-sort-custom-order field='year' />
        <field-sort-custom-order field='month_name' />
        <field-sort-custom-order field='date_yy_mmm' />
        <field-sort-custom-order field='markets_code' />
        <field-sort-custom-order field='markets_name' />
        <field-sort-custom-order field='zone' />
        <field-sort-custom-order field='product_code (products)' />
        <field-sort-custom-order field='product_type' />
        <field-sort-custom-order field='product_code' />
        <field-sort-custom-order field='customer_code' />
        <field-sort-custom-order field='market_code' />
        <field-sort-custom-order field='order_date' />
        <field-sort-custom-order field='sales_qty' />
        <field-sort-custom-order field='sales_amount' />
        <field-sort-custom-order field='Calculation_103301379542614016' />
        <field-sort-custom-order field='currency' />
      </field-sort-info>
      <filter class='categorical' column='[markets_code]' filter-group='2'>
        <groupfilter from='&quot;Mark001&quot;' function='range' level='[markets_code]' to='&quot;Mark015&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='quantitative' column='[sales_amount]' filter-group='2' included-values='in-range'>
        <min>1.0</min>
        <max>1510944.0</max>
      </filter>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 1 (generated) 1' name='[Action10]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Profit' type='sheet' worksheet='Year' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Profit' />
      </command>
    </action>
    <action caption='Filter 2 (generated) 1' name='[Action11]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Profit' type='sheet' worksheet='Month' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Profit' />
      </command>
    </action>
    <action caption='Filter 10 (generated)' name='[Action12]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Profit' type='sheet' worksheet='Profit Margin by markets' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Profit' />
      </command>
    </action>
    <action caption='Filter 11 (generated)' name='[Action13]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Profit' type='sheet' worksheet='Revenue' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Profit' />
      </command>
    </action>
    <action caption='Filter 12 (generated)' name='[Action14]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Profit' type='sheet' worksheet='Profit' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Profit' />
      </command>
    </action>
    <action caption='Filter 13 (generated)' name='[Action15]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Profit' type='sheet' worksheet='Revenue By Market' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Profit' />
      </command>
    </action>
    <action caption='Filter 14 (generated)' name='[Action16]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Profit' type='sheet' worksheet='Pi Chart' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Profit' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Sales' type='sheet' worksheet='Year' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Sales' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Sales' type='sheet' worksheet='Month' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Sales' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Sales' type='sheet' worksheet='Revenue' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Sales' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Sales' type='sheet' worksheet='Quantity' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Sales' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Sales' type='sheet' worksheet='Revenue By Market' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Sales' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Sales' type='sheet' worksheet='Sales Quantity by Markets' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Sales' />
      </command>
    </action>
    <action caption='Filter 7 (generated)' name='[Action7]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Sales' type='sheet' worksheet='Revenue By Year' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Sales' />
      </command>
    </action>
    <action caption='Filter 8 (generated)' name='[Action8]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Sales' type='sheet' worksheet='Top 5 Customers' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Sales' />
      </command>
    </action>
    <action caption='Filter 9 (generated)' name='[Action9]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Sales' type='sheet' worksheet='Top 5 Products' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Sales' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Customer table'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1o61bz40zqzt6f13b749z0lja0j3' />
          </datasources>
          <datasource-dependencies datasource='federated.1o61bz40zqzt6f13b749z0lja0j3'>
            <column caption='Normalized amount' datatype='real' name='[Calculation_103301379542614016]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [currency] == &apos;USD&apos; THEN [sales_amount]*75 ELSE [sales_amount] END' />
            </column>
            <column caption='Profit margin % calculated' datatype='real' name='[Calculation_103301379613048834]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([profit_margin])/ SUM([Calculation_103301379542614016])' />
            </column>
            <column datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column datatype='string' name='[customer_type]' role='dimension' type='nominal' />
            <column-instance column='[custmer_name]' derivation='None' name='[none:custmer_name:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[profit_margin]' role='measure' type='quantitative' />
            <column datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_103301379542614016]' derivation='Sum' name='[sum:Calculation_103301379542614016:qk]' pivot='key' type='quantitative' />
            <column-instance column='[profit_margin]' derivation='Sum' name='[sum:profit_margin:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_103301379613048834]' derivation='User' name='[usr:Calculation_103301379613048834:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1o61bz40zqzt6f13b749z0lja0j3].[sum:Calculation_103301379542614016:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1o61bz40zqzt6f13b749z0lja0j3].[usr:Calculation_103301379613048834:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1o61bz40zqzt6f13b749z0lja0j3].[sum:profit_margin:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (customer_type)]'>
            <groupfilter function='level-members' level='[customer_type]' user:ui-action-filter='[Action16]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1o61bz40zqzt6f13b749z0lja0j3].[none:custmer_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1o61bz40zqzt6f13b749z0lja0j3].[usr:Calculation_103301379613048834:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[:Measure Names]</column>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (customer_type)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1o61bz40zqzt6f13b749z0lja0j3].[usr:Calculation_103301379613048834:qk]' value='p0.00%' />
            <format attr='width' field='[federated.1o61bz40zqzt6f13b749z0lja0j3].[:Measure Names]' value='81' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1o61bz40zqzt6f13b749z0lja0j3].[none:custmer_name:nk]</rows>
        <cols>[federated.1o61bz40zqzt6f13b749z0lja0j3].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{A383C945-3C55-434B-AE66-86AF1EAAF759}' />
    </worksheet>
    <worksheet name='Month'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1o61bz40zqzt6f13b749z0lja0j3' />
          </datasources>
          <datasource-dependencies datasource='federated.1o61bz40zqzt6f13b749z0lja0j3'>
            <column caption='Blank' datatype='string' name='[Calculation_103301379554488321]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&apos;&apos;' />
            </column>
            <column datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column datatype='string' name='[customer_type]' role='dimension' type='nominal' />
            <column datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_103301379554488321]' derivation='None' name='[none:Calculation_103301379554488321:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (Blank,YEAR(cy_date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_103301379554488321]' member='&quot;&quot;' />
              <groupfilter function='member' level='[yr:cy_date:ok]' member='2019' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (YEAR(cy_date),MONTH(cy_date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action7]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (custmer_name)]'>
            <groupfilter function='level-members' level='[custmer_name]' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (customer_type)]'>
            <groupfilter function='level-members' level='[customer_type]' user:ui-action-filter='[Action16]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (markets_name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (product_code (products))]'>
            <groupfilter function='member' level='[product_code (products)]' member='&quot;Prod159&quot;' user:ui-action-filter='[Action9]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (Blank,YEAR(cy_date))]</column>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (markets_name)]</column>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (YEAR(cy_date),MONTH(cy_date))]</column>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (product_code (products))]</column>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (custmer_name)]</column>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (customer_type)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='5' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1o61bz40zqzt6f13b749z0lja0j3].[mn:cy_date:ok]' value='21' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1o61bz40zqzt6f13b749z0lja0j3].[mn:cy_date:ok]' value='iLLL' />
            <format attr='color' field='[federated.1o61bz40zqzt6f13b749z0lja0j3].[mn:cy_date:ok]' value='#d07724' />
            <format attr='font-size' field='[federated.1o61bz40zqzt6f13b749z0lja0j3].[mn:cy_date:ok]' value='12' />
            <format attr='font-weight' field='[federated.1o61bz40zqzt6f13b749z0lja0j3].[mn:cy_date:ok]' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[none:Calculation_103301379554488321:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1o61bz40zqzt6f13b749z0lja0j3].[mn:cy_date:ok]</cols>
      </table>
      <simple-id uuid='{FBEC1753-3AB1-4716-81CC-6838F99A49C3}' />
    </worksheet>
    <worksheet name='Pi Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1o61bz40zqzt6f13b749z0lja0j3' />
          </datasources>
          <datasource-dependencies datasource='federated.1o61bz40zqzt6f13b749z0lja0j3'>
            <column caption='Normalized amount' datatype='real' name='[Calculation_103301379542614016]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [currency] == &apos;USD&apos; THEN [sales_amount]*75 ELSE [sales_amount] END' />
            </column>
            <column datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column datatype='string' name='[customer_type]' role='dimension' type='nominal' />
            <column-instance column='[customer_type]' derivation='None' name='[none:customer_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_103301379542614016]' derivation='Sum' name='[pcto:sum:Calculation_103301379542614016:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_103301379542614016]' derivation='Sum' name='[sum:Calculation_103301379542614016:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='400' />
            <format attr='cell-h' value='400' />
            <format attr='cell' value='50' />
            <format attr='cell-q' value='250' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[none:customer_type:nk]' />
              <wedge-size column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[sum:Calculation_103301379542614016:qk]' />
              <size column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[sum:Calculation_103301379542614016:qk]' />
              <text column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[none:customer_type:nk]' />
              <text column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[pcto:sum:Calculation_103301379542614016:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='12' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.71364641189575195' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{9824D534-594A-43FD-91F8-669A1B6B923E}' />
    </worksheet>
    <worksheet name='Profit'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1o61bz40zqzt6f13b749z0lja0j3' />
          </datasources>
          <datasource-dependencies datasource='federated.1o61bz40zqzt6f13b749z0lja0j3'>
            <column caption='Blank' datatype='string' name='[Calculation_103301379554488321]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&apos;&apos;' />
            </column>
            <column datatype='string' name='[customer_type]' role='dimension' type='nominal' />
            <column datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column datatype='real' name='[profit_margin]' role='measure' type='quantitative' />
            <column-instance column='[profit_margin]' derivation='Sum' name='[sum:profit_margin:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (Blank,MONTH(cy_date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action11]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_103301379554488321]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (Blank,YEAR(cy_date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action10]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_103301379554488321]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (customer_type)]'>
            <groupfilter function='level-members' level='[customer_type]' user:ui-action-filter='[Action16]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (markets_name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action15]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (Blank,YEAR(cy_date))]</column>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (Blank,MONTH(cy_date))]</column>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (markets_name)]</column>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (customer_type)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' value='#59a14f' />
            <format attr='text-format' field='[federated.1o61bz40zqzt6f13b749z0lja0j3].[sum:profit_margin:qk]' value='n#,##0,,.00M;-#,##0,,.00M' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[sum:profit_margin:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='15'>Profit</run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='18'>&lt;[federated.1o61bz40zqzt6f13b749z0lja0j3].[sum:profit_margin:qk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{0E7256EA-EC1E-4BE7-8F70-585239B0357B}' />
    </worksheet>
    <worksheet name='Profit Margin by markets'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1o61bz40zqzt6f13b749z0lja0j3' />
          </datasources>
          <datasource-dependencies datasource='federated.1o61bz40zqzt6f13b749z0lja0j3'>
            <column caption='Normalized amount' datatype='real' name='[Calculation_103301379542614016]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [currency] == &apos;USD&apos; THEN [sales_amount]*75 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_103301379554488321]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&apos;&apos;' />
            </column>
            <column caption='Profit margin % calculated' datatype='real' name='[Calculation_103301379613048834]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([profit_margin])/ SUM([Calculation_103301379542614016])' />
            </column>
            <column datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column datatype='string' name='[customer_type]' role='dimension' type='nominal' />
            <column datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[markets_name]' derivation='None' name='[none:markets_name:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[profit_margin]' role='measure' type='quantitative' />
            <column datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_103301379613048834]' derivation='User' name='[usr:Calculation_103301379613048834:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (Blank,MONTH(cy_date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action11]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_103301379554488321]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (Blank,YEAR(cy_date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action10]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_103301379554488321]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (customer_type)]'>
            <groupfilter function='level-members' level='[customer_type]' user:ui-action-filter='[Action16]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (markets_name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action15]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1o61bz40zqzt6f13b749z0lja0j3].[none:markets_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1o61bz40zqzt6f13b749z0lja0j3].[usr:Calculation_103301379613048834:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (Blank,YEAR(cy_date))]</column>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (Blank,MONTH(cy_date))]</column>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (markets_name)]</column>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (customer_type)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='90' />
            <format attr='cell-h' value='30' />
            <format attr='cell' value='30' />
            <format attr='cell-q' value='150' />
            <format attr='text-format' field='[federated.1o61bz40zqzt6f13b749z0lja0j3].[usr:Calculation_103301379613048834:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1o61bz40zqzt6f13b749z0lja0j3].[none:markets_name:nk]' value='72' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1o61bz40zqzt6f13b749z0lja0j3].[usr:Calculation_103301379613048834:qk]' palette='red_gold_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[usr:Calculation_103301379613048834:qk]' />
              <text column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[usr:Calculation_103301379613048834:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-size' value='10' />
                <format attr='color' value='#000000' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#72b966' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1o61bz40zqzt6f13b749z0lja0j3].[none:markets_name:nk]</rows>
        <cols>[federated.1o61bz40zqzt6f13b749z0lja0j3].[usr:Calculation_103301379613048834:qk]</cols>
      </table>
      <simple-id uuid='{F53D660E-F2FD-48AE-B609-16184F58FF28}' />
    </worksheet>
    <worksheet name='Profit Trend'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1o61bz40zqzt6f13b749z0lja0j3' />
          </datasources>
          <datasource-dependencies datasource='federated.1o61bz40zqzt6f13b749z0lja0j3'>
            <column caption='Normalized amount' datatype='real' name='[Calculation_103301379542614016]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [currency] == &apos;USD&apos; THEN [sales_amount]*75 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_103301379554488321]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&apos;&apos;' />
            </column>
            <column caption='Profit margin % calculated' datatype='real' name='[Calculation_103301379613048834]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([profit_margin])/ SUM([Calculation_103301379542614016])' />
            </column>
            <column datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column datatype='string' name='[customer_type]' role='dimension' type='nominal' />
            <column datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column datatype='real' name='[profit_margin]' role='measure' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Quarter' name='[qr:cy_date:ok]' pivot='key' type='ordinal' />
            <column datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_103301379542614016]' derivation='Sum' name='[sum:Calculation_103301379542614016:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_103301379613048834]' derivation='User' name='[usr:Calculation_103301379613048834:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (Blank,MONTH(cy_date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action11]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_103301379554488321]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (Blank,YEAR(cy_date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action10]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_103301379554488321]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (customer_type)]'>
            <groupfilter function='level-members' level='[customer_type]' user:ui-action-filter='[Action16]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (markets_name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action12]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (markets_name)]</column>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (Blank,YEAR(cy_date))]</column>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (Blank,MONTH(cy_date))]</column>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (customer_type)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1o61bz40zqzt6f13b749z0lja0j3].[usr:Calculation_103301379613048834:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1o61bz40zqzt6f13b749z0lja0j3].[sum:Calculation_103301379542614016:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.1o61bz40zqzt6f13b749z0lja0j3].[usr:Calculation_103301379613048834:qk]' scope='rows' value='' />
            <format attr='width' field='[federated.1o61bz40zqzt6f13b749z0lja0j3].[sum:Calculation_103301379542614016:qk]' value='72' />
            <format attr='width' field='[federated.1o61bz40zqzt6f13b749z0lja0j3].[usr:Calculation_103301379613048834:qk]' value='72' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1o61bz40zqzt6f13b749z0lja0j3].[usr:Calculation_103301379613048834:qk]' value='p0.00%' />
            <format attr='text-format' field='[federated.1o61bz40zqzt6f13b749z0lja0j3].[sum:Calculation_103301379542614016:qk]' value='c&quot;₹ &quot;#,##0,,.00M;&quot;₹ &quot;-#,##0,,.00M' />
            <format attr='width' field='[federated.1o61bz40zqzt6f13b749z0lja0j3].[qr:cy_date:ok]' value='56' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1o61bz40zqzt6f13b749z0lja0j3].[sum:Calculation_103301379542614016:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[:Measure Names]' />
              <text column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[sum:Calculation_103301379542614016:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#76b7b2' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1o61bz40zqzt6f13b749z0lja0j3].[usr:Calculation_103301379613048834:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[:Measure Names]' />
              <text column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[usr:Calculation_103301379613048834:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f28e2b' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1o61bz40zqzt6f13b749z0lja0j3].[sum:Calculation_103301379542614016:qk] + [federated.1o61bz40zqzt6f13b749z0lja0j3].[usr:Calculation_103301379613048834:qk])</rows>
        <cols>([federated.1o61bz40zqzt6f13b749z0lja0j3].[yr:cy_date:ok] / [federated.1o61bz40zqzt6f13b749z0lja0j3].[qr:cy_date:ok])</cols>
      </table>
      <simple-id uuid='{66BE56E3-F885-4A37-95F6-35269B8E7E73}' />
    </worksheet>
    <worksheet name='Quantity'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1o61bz40zqzt6f13b749z0lja0j3' />
          </datasources>
          <datasource-dependencies datasource='federated.1o61bz40zqzt6f13b749z0lja0j3'>
            <column caption='Blank' datatype='string' name='[Calculation_103301379554488321]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&apos;&apos;' />
            </column>
            <column datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
            <column datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
            <column-instance column='[sales_qty]' derivation='Sum' name='[sum:sales_qty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (Blank,MONTH(cy_date))]' context='true'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_103301379554488321]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (Blank,YEAR(cy_date))]' context='true'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_103301379554488321]' member='&quot;&quot;' />
              <groupfilter function='member' level='[yr:cy_date:ok]' member='2019' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (YEAR(cy_date),MONTH(cy_date))]' context='true'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action7]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (custmer_name)]' context='true'>
            <groupfilter function='level-members' level='[custmer_name]' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (markets_name)]' context='true'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (product_code (products))]' context='true'>
            <groupfilter function='member' level='[product_code (products)]' member='&quot;Prod159&quot;' user:ui-action-filter='[Action9]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (Blank,MONTH(cy_date))]</column>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (Blank,YEAR(cy_date))]</column>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (YEAR(cy_date),MONTH(cy_date))]</column>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (custmer_name)]</column>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (markets_name)]</column>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (product_code (products))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1o61bz40zqzt6f13b749z0lja0j3].[sum:sales_qty:qk]' value='n#,##0,,.00M;-#,##0,,.00M' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[sum:sales_qty:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#59a14f' fontsize='15'>Sales Quantity</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#59a14f' fontsize='18'>&lt;[federated.1o61bz40zqzt6f13b749z0lja0j3].[sum:sales_qty:qk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{4B61CF07-2847-4060-93A2-7EB9D36E79A9}' />
    </worksheet>
    <worksheet name='Revenue'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1o61bz40zqzt6f13b749z0lja0j3' />
          </datasources>
          <datasource-dependencies datasource='federated.1o61bz40zqzt6f13b749z0lja0j3'>
            <column caption='Normalized amount' datatype='real' name='[Calculation_103301379542614016]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [currency] == &apos;USD&apos; THEN [sales_amount]*75 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_103301379554488321]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&apos;&apos;' />
            </column>
            <column datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column datatype='string' name='[customer_type]' role='dimension' type='nominal' />
            <column datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
            <column datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_103301379542614016]' derivation='Sum' name='[sum:Calculation_103301379542614016:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (Blank,MONTH(cy_date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_103301379554488321]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (Blank,YEAR(cy_date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_103301379554488321]' member='&quot;&quot;' />
              <groupfilter function='member' level='[yr:cy_date:ok]' member='2019' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (YEAR(cy_date),MONTH(cy_date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action7]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (custmer_name)]'>
            <groupfilter function='level-members' level='[custmer_name]' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (customer_type)]'>
            <groupfilter function='level-members' level='[customer_type]' user:ui-action-filter='[Action16]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (markets_name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (product_code (products))]'>
            <groupfilter function='member' level='[product_code (products)]' member='&quot;Prod159&quot;' user:ui-action-filter='[Action9]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (Blank,YEAR(cy_date))]</column>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (Blank,MONTH(cy_date))]</column>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (markets_name)]</column>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (YEAR(cy_date),MONTH(cy_date))]</column>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (product_code (products))]</column>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (custmer_name)]</column>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (customer_type)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1o61bz40zqzt6f13b749z0lja0j3].[sum:Calculation_103301379542614016:qk]' value='c&quot;₹ &quot;#,##0,,.00M;&quot;₹ &quot;-#,##0,,.00M' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[sum:Calculation_103301379542614016:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#59a14f' fontsize='15'>Total Revenue</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#59a14f' fontsize='18'>&lt;[federated.1o61bz40zqzt6f13b749z0lja0j3].[sum:Calculation_103301379542614016:qk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{AF796B27-FFD5-4917-B1EC-ED5E89706BF9}' />
    </worksheet>
    <worksheet name='Revenue By Market'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1o61bz40zqzt6f13b749z0lja0j3' />
          </datasources>
          <datasource-dependencies datasource='federated.1o61bz40zqzt6f13b749z0lja0j3'>
            <column caption='Normalized amount' datatype='real' name='[Calculation_103301379542614016]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [currency] == &apos;USD&apos; THEN [sales_amount]*75 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_103301379554488321]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&apos;&apos;' />
            </column>
            <column datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column datatype='string' name='[customer_type]' role='dimension' type='nominal' />
            <column datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[markets_name]' derivation='None' name='[none:markets_name:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_103301379542614016]' derivation='Sum' name='[sum:Calculation_103301379542614016:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (Blank,MONTH(cy_date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action11]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_103301379554488321]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (Blank,YEAR(cy_date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action10]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_103301379554488321]' member='&quot;&quot;' />
              <groupfilter function='member' level='[yr:cy_date:ok]' member='2019' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (customer_type)]'>
            <groupfilter function='level-members' level='[customer_type]' user:ui-action-filter='[Action16]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (markets_name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action12]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1o61bz40zqzt6f13b749z0lja0j3].[none:markets_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1o61bz40zqzt6f13b749z0lja0j3].[sum:Calculation_103301379542614016:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (Blank,YEAR(cy_date))]</column>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (Blank,MONTH(cy_date))]</column>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (markets_name)]</column>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (customer_type)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1o61bz40zqzt6f13b749z0lja0j3].[sum:Calculation_103301379542614016:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='cell-w' value='90' />
            <format attr='cell-h' value='30' />
            <format attr='cell' value='30' />
            <format attr='cell-q' value='150' />
            <format attr='text-format' field='[federated.1o61bz40zqzt6f13b749z0lja0j3].[sum:Calculation_103301379542614016:qk]' value='c&quot;₹ &quot;#,##0,,.00M;&quot;₹ &quot;-#,##0,,.00M' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1o61bz40zqzt6f13b749z0lja0j3].[none:markets_name:nk]' value='72' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[sum:Calculation_103301379542614016:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#333333'>&lt;</run>
                <run bold='true' fontcolor='#333333'>[federated.1o61bz40zqzt6f13b749z0lja0j3].[sum:Calculation_103301379542614016:qk]</run>
                <run bold='true' fontcolor='#333333'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-size' value='10' />
                <format attr='color' value='#000000' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f17b79' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1o61bz40zqzt6f13b749z0lja0j3].[none:markets_name:nk]</rows>
        <cols>[federated.1o61bz40zqzt6f13b749z0lja0j3].[sum:Calculation_103301379542614016:qk]</cols>
      </table>
      <simple-id uuid='{B19151C0-BA83-4A48-9786-0E56DADF20C2}' />
    </worksheet>
    <worksheet name='Revenue By Year'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1o61bz40zqzt6f13b749z0lja0j3' />
          </datasources>
          <datasource-dependencies datasource='federated.1o61bz40zqzt6f13b749z0lja0j3'>
            <column caption='Normalized amount' datatype='real' name='[Calculation_103301379542614016]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [currency] == &apos;USD&apos; THEN [sales_amount]*75 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_103301379554488321]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&apos;&apos;' />
            </column>
            <column datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
            <column datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_103301379542614016]' derivation='Sum' name='[sum:Calculation_103301379542614016:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (Blank,MONTH(cy_date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_103301379554488321]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (Blank,YEAR(cy_date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_103301379554488321]' member='&quot;&quot;' />
              <groupfilter function='member' level='[yr:cy_date:ok]' member='2019' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (custmer_name)]'>
            <groupfilter function='level-members' level='[custmer_name]' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (markets_name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (product_code (products))]'>
            <groupfilter function='level-members' level='[product_code (products)]' user:ui-action-filter='[Action9]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (Blank,YEAR(cy_date))]</column>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (Blank,MONTH(cy_date))]</column>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (markets_name)]</column>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (product_code (products))]</column>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (custmer_name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1o61bz40zqzt6f13b749z0lja0j3].[sum:Calculation_103301379542614016:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1o61bz40zqzt6f13b749z0lja0j3].[sum:Calculation_103301379542614016:qk]' value='c&quot;₹ &quot;#,##0,,.00M;&quot;₹ &quot;-#,##0,,.00M' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1o61bz40zqzt6f13b749z0lja0j3].[yr:cy_date:ok]' value='21' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1o61bz40zqzt6f13b749z0lja0j3].[mn:cy_date:ok]' value='iLLL' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1o61bz40zqzt6f13b749z0lja0j3].[sum:Calculation_103301379542614016:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[sum:Calculation_103301379542614016:qk]' />
              <text column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[sum:Calculation_103301379542614016:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='2.2872927188873291' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1o61bz40zqzt6f13b749z0lja0j3].[sum:Calculation_103301379542614016:qk]</rows>
        <cols>([federated.1o61bz40zqzt6f13b749z0lja0j3].[yr:cy_date:ok] / [federated.1o61bz40zqzt6f13b749z0lja0j3].[mn:cy_date:ok])</cols>
      </table>
      <simple-id uuid='{2A461DB0-AE60-41AE-A470-1C6C1A339839}' />
    </worksheet>
    <worksheet name='Sales Quantity by Markets'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1o61bz40zqzt6f13b749z0lja0j3' />
          </datasources>
          <datasource-dependencies datasource='federated.1o61bz40zqzt6f13b749z0lja0j3'>
            <column caption='Blank' datatype='string' name='[Calculation_103301379554488321]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&apos;&apos;' />
            </column>
            <column datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[markets_name]' derivation='None' name='[none:markets_name:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
            <column datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
            <column-instance column='[sales_qty]' derivation='Sum' name='[sum:sales_qty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (Blank,MONTH(cy_date))]' context='true'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_103301379554488321]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (Blank,YEAR(cy_date))]' context='true'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_103301379554488321]' member='&quot;&quot;' />
              <groupfilter function='member' level='[yr:cy_date:ok]' member='2019' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (YEAR(cy_date),MONTH(cy_date))]' context='true'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action7]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (custmer_name)]' context='true'>
            <groupfilter function='level-members' level='[custmer_name]' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (markets_name)]' context='true'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (product_code (products))]' context='true'>
            <groupfilter function='member' level='[product_code (products)]' member='&quot;Prod159&quot;' user:ui-action-filter='[Action9]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1o61bz40zqzt6f13b749z0lja0j3].[none:markets_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1o61bz40zqzt6f13b749z0lja0j3].[sum:sales_qty:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (Blank,MONTH(cy_date))]</column>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (Blank,YEAR(cy_date))]</column>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (YEAR(cy_date),MONTH(cy_date))]</column>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (custmer_name)]</column>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (markets_name)]</column>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (product_code (products))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='90' />
            <format attr='cell-h' value='30' />
            <format attr='cell' value='30' />
            <format attr='cell-q' value='150' />
            <format attr='text-format' field='[federated.1o61bz40zqzt6f13b749z0lja0j3].[sum:sales_qty:qk]' value='n#,##0,.00K;-#,##0,.00K' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1o61bz40zqzt6f13b749z0lja0j3].[none:markets_name:nk]' value='64' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[sum:sales_qty:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='10' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#72b966' />
                <format attr='size' value='1.7251380681991577' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='130' />
                <format attr='maxwidth' value='130' />
                <format attr='minheight' value='30' />
                <format attr='maxheight' value='30' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1o61bz40zqzt6f13b749z0lja0j3].[none:markets_name:nk]</rows>
        <cols>[federated.1o61bz40zqzt6f13b749z0lja0j3].[sum:sales_qty:qk]</cols>
      </table>
      <simple-id uuid='{05ED8C37-D63B-476B-B5F8-FB355EC97CE0}' />
    </worksheet>
    <worksheet name='Top 5 Customers'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1o61bz40zqzt6f13b749z0lja0j3' />
          </datasources>
          <datasource-dependencies datasource='federated.1o61bz40zqzt6f13b749z0lja0j3'>
            <column caption='Normalized amount' datatype='real' name='[Calculation_103301379542614016]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [currency] == &apos;USD&apos; THEN [sales_amount]*75 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_103301379554488321]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&apos;&apos;' />
            </column>
            <column datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[custmer_name]' derivation='None' name='[none:custmer_name:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
            <column datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_103301379542614016]' derivation='Sum' name='[sum:Calculation_103301379542614016:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (Blank,MONTH(cy_date))]' context='true'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_103301379554488321]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (Blank,YEAR(cy_date))]' context='true'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_103301379554488321]' member='&quot;&quot;' />
              <groupfilter function='member' level='[yr:cy_date:ok]' member='2019' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (YEAR(cy_date),MONTH(cy_date))]' context='true'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action7]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (markets_name)]' context='true'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (product_code (products))]' context='true'>
            <groupfilter function='member' level='[product_code (products)]' member='&quot;Prod159&quot;' user:ui-action-filter='[Action9]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[none:custmer_name:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_103301379542614016])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:custmer_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1o61bz40zqzt6f13b749z0lja0j3].[none:custmer_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1o61bz40zqzt6f13b749z0lja0j3].[sum:Calculation_103301379542614016:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (Blank,MONTH(cy_date))]</column>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (Blank,YEAR(cy_date))]</column>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (YEAR(cy_date),MONTH(cy_date))]</column>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (markets_name)]</column>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (product_code (products))]</column>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[none:custmer_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1o61bz40zqzt6f13b749z0lja0j3].[sum:Calculation_103301379542614016:qk]' value='70' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1o61bz40zqzt6f13b749z0lja0j3].[sum:Calculation_103301379542614016:qk]' value='n#,##0,,.00M;-#,##0,,.00M' />
            <format attr='cell-w' value='102' />
            <format attr='cell-h' value='34' />
            <format attr='cell' value='34' />
            <format attr='cell-q' value='170' />
            <format attr='height' field='[federated.1o61bz40zqzt6f13b749z0lja0j3].[none:custmer_name:nk]' value='31' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1o61bz40zqzt6f13b749z0lja0j3].[none:custmer_name:nk]' value='88' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[sum:Calculation_103301379542614016:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-size' value='11' />
                <format attr='font-weight' value='bold' />
                <format attr='color' value='#000000' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.4392818212509155' />
                <format attr='mark-color' value='#75a1c7' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='148' />
                <format attr='maxwidth' value='148' />
                <format attr='minheight' value='155' />
                <format attr='maxheight' value='155' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1o61bz40zqzt6f13b749z0lja0j3].[none:custmer_name:nk]</rows>
        <cols>[federated.1o61bz40zqzt6f13b749z0lja0j3].[sum:Calculation_103301379542614016:qk]</cols>
      </table>
      <simple-id uuid='{57A54EE6-6AF1-47F5-92F1-C6BBE1D2290D}' />
    </worksheet>
    <worksheet name='Top 5 Products'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1o61bz40zqzt6f13b749z0lja0j3' />
          </datasources>
          <datasource-dependencies datasource='federated.1o61bz40zqzt6f13b749z0lja0j3'>
            <column caption='Normalized amount' datatype='real' name='[Calculation_103301379542614016]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [currency] == &apos;USD&apos; THEN [sales_amount]*75 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_103301379554488321]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&apos;&apos;' />
            </column>
            <column datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[product_code (products)]' derivation='None' name='[none:product_code (products):nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
            <column datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_103301379542614016]' derivation='Sum' name='[sum:Calculation_103301379542614016:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (Blank,MONTH(cy_date))]' context='true'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_103301379554488321]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (Blank,YEAR(cy_date))]' context='true'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_103301379554488321]' member='&quot;&quot;' />
              <groupfilter function='member' level='[yr:cy_date:ok]' member='2019' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (YEAR(cy_date),MONTH(cy_date))]' context='true'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action7]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (custmer_name)]' context='true'>
            <groupfilter function='level-members' level='[custmer_name]' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (markets_name)]' context='true'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[none:product_code (products):nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_103301379542614016])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:product_code (products):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1o61bz40zqzt6f13b749z0lja0j3].[none:product_code (products):nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1o61bz40zqzt6f13b749z0lja0j3].[sum:Calculation_103301379542614016:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (Blank,MONTH(cy_date))]</column>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (Blank,YEAR(cy_date))]</column>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (YEAR(cy_date),MONTH(cy_date))]</column>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (custmer_name)]</column>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (markets_name)]</column>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[none:product_code (products):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1o61bz40zqzt6f13b749z0lja0j3].[sum:Calculation_103301379542614016:qk]' value='c&quot;₹ &quot;#,##0,,.00M;&quot;₹ &quot;-#,##0,,.00M' />
            <format attr='cell-w' value='102' />
            <format attr='cell-h' value='34' />
            <format attr='cell' value='34' />
            <format attr='cell-q' value='170' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1o61bz40zqzt6f13b749z0lja0j3].[none:product_code (products):nk]' value='56' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[sum:Calculation_103301379542614016:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='12' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.626187801361084' />
                <format attr='mark-color' value='#d3b348' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='242' />
                <format attr='maxwidth' value='242' />
                <format attr='minheight' value='170' />
                <format attr='maxheight' value='170' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1o61bz40zqzt6f13b749z0lja0j3].[none:product_code (products):nk]</rows>
        <cols>[federated.1o61bz40zqzt6f13b749z0lja0j3].[sum:Calculation_103301379542614016:qk]</cols>
      </table>
      <simple-id uuid='{4B9CFDB8-BDB6-4BF1-9634-5D8F72F5E878}' />
    </worksheet>
    <worksheet name='Year'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1o61bz40zqzt6f13b749z0lja0j3' />
          </datasources>
          <datasource-dependencies datasource='federated.1o61bz40zqzt6f13b749z0lja0j3'>
            <column caption='Blank' datatype='string' name='[Calculation_103301379554488321]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&apos;&apos;' />
            </column>
            <column datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column datatype='string' name='[customer_type]' role='dimension' type='nominal' />
            <column datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_103301379554488321]' derivation='None' name='[none:Calculation_103301379554488321:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (Blank,MONTH(cy_date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_103301379554488321]' member='&quot;&quot;' />
              <groupfilter function='member' level='[mn:cy_date:ok]' member='5' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (YEAR(cy_date),MONTH(cy_date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action7]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (custmer_name)]'>
            <groupfilter function='level-members' level='[custmer_name]' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (customer_type)]'>
            <groupfilter function='level-members' level='[customer_type]' user:ui-action-filter='[Action16]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (markets_name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (product_code (products))]'>
            <groupfilter function='member' level='[product_code (products)]' member='&quot;Prod159&quot;' user:ui-action-filter='[Action9]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (Blank,MONTH(cy_date))]</column>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (markets_name)]</column>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (YEAR(cy_date),MONTH(cy_date))]</column>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (product_code (products))]</column>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (custmer_name)]</column>
            <column>[federated.1o61bz40zqzt6f13b749z0lja0j3].[Action (customer_type)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='5' />
            <format attr='color' value='#f17b79' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1o61bz40zqzt6f13b749z0lja0j3].[yr:cy_date:ok]' value='21' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.1o61bz40zqzt6f13b749z0lja0j3].[yr:cy_date:ok]' value='11' />
            <format attr='font-weight' field='[federated.1o61bz40zqzt6f13b749z0lja0j3].[yr:cy_date:ok]' value='bold' />
            <format attr='color' field='[federated.1o61bz40zqzt6f13b749z0lja0j3].[yr:cy_date:ok]' value='#d07724' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1o61bz40zqzt6f13b749z0lja0j3].[none:Calculation_103301379554488321:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1o61bz40zqzt6f13b749z0lja0j3].[yr:cy_date:ok]</cols>
      </table>
      <simple-id uuid='{1B8F74E5-5E1E-4BC5-92B1-EF53E706CF09}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard Profit'>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <zones>
        <zone h='6250' id='3' name='Year' w='28700' x='300' y='-375' />
        <zone h='6250' id='4' name='Month' w='43631' x='293' y='5339' />
        <zone h='63021' id='5' name='Revenue By Market' w='21962' x='73' y='21745' />
        <zone h='10250' id='6' name='Revenue' w='16400' x='4600' y='11500' />
        <zone h='10125' id='14' name='Profit' show-title='false' w='16000' x='30200' y='12375' />
        <zone h='66927' id='17' name='Profit Margin by markets' w='26574' x='22182' y='21615' />
        <zone h='42188' id='18' name='Profit Trend' w='50659' x='48829' y='521' />
        <zone h='54427' id='19' name='Customer table' w='31406' x='49341' y='44010' />
        <zone h='52344' id='20' name='Pi Chart' show-title='false' w='20644' x='80600' y='45052' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1750' minheight='1750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='23' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='24' param='vert' type='layout-flow' w='98828' x='586' y='1042'>
                <zone fixed-size='48' h='6250' id='3' is-fixed='true' name='Year' w='28700' x='300' y='-375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42188' id='18' is-fixed='true' name='Profit Trend' w='50659' x='48829' y='521'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='48' h='6250' id='4' is-fixed='true' name='Month' w='43631' x='293' y='5339'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='79' h='10250' id='6' is-fixed='true' name='Revenue' w='16400' x='4600' y='11500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='78' h='10125' id='14' is-fixed='true' name='Profit' show-title='false' w='16000' x='30200' y='12375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='66927' id='17' is-fixed='true' name='Profit Margin by markets' w='26574' x='22182' y='21615'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='63021' id='5' is-fixed='true' name='Revenue By Market' w='21962' x='73' y='21745'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='54427' id='19' is-fixed='true' name='Customer table' w='31406' x='49341' y='44010'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='52344' id='20' is-fixed='true' name='Pi Chart' show-title='false' w='20644' x='80600' y='45052'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{3A316430-6A3D-4AC7-AD98-BF4197EE24F1}' />
    </dashboard>
    <dashboard name='Dashboard Sales'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' preset-index='1' sizing-mode='fixed' />
      <zones>
        <zone h='6250' id='3' name='Year' w='35500' x='300' y='-375' />
        <zone h='7000' id='4' name='Month' w='47400' x='300' y='5375' />
        <zone h='76172' id='5' name='Revenue By Market' w='18009' x='293' y='23438' />
        <zone h='11625' id='6' name='Revenue' w='17700' x='500' y='12000' />
        <zone h='73047' id='7' name='Sales Quantity by Markets' w='19473' x='18521' y='24349' />
        <zone h='11458' id='8' name='Quantity' w='18741' x='18814' y='13151' />
        <zone h='40000' id='9' name='Revenue By Year' w='50800' x='48300' y='-750' />
        <zone h='39250' id='10' name='Top 5 Customers' w='27500' x='42500' y='40875' />
        <zone h='35875' id='11' name='Top 5 Products' w='30600' x='68500' y='40250' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1800' minheight='1800' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='23' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='24' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='40000' id='9' is-fixed='true' name='Revenue By Year' w='50800' x='48300' y='-750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='50' h='6250' id='3' is-fixed='true' name='Year' w='35500' x='300' y='-375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='56' h='7000' id='4' is-fixed='true' name='Month' w='47400' x='300' y='5375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='93' h='11625' id='6' is-fixed='true' name='Revenue' w='17700' x='500' y='12000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='92' h='11458' id='8' is-fixed='true' name='Quantity' w='18741' x='18814' y='13151'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='76172' id='5' is-fixed='true' name='Revenue By Market' w='18009' x='293' y='23438'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='73047' id='7' is-fixed='true' name='Sales Quantity by Markets' w='19473' x='18521' y='24349'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='35875' id='11' is-fixed='true' name='Top 5 Products' w='30600' x='68500' y='40250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39250' id='10' is-fixed='true' name='Top 5 Customers' w='27500' x='42500' y='40875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{3FED011C-0ACC-40B4-A6B1-705D059F29C5}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Revenue'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1o61bz40zqzt6f13b749z0lja0j3].[sum:Calculation_103301379542614016:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>17660106.0</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1o61bz40zqzt6f13b749z0lja0j3].[none:markets_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E1F822B3-3D6C-4337-9A5A-5B4F074EEF17}' />
    </window>
    <window class='worksheet' name='Quantity'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{15677E07-93A2-4F8F-B023-6ED73889E687}' />
    </window>
    <window class='worksheet' name='Revenue By Market'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.1o61bz40zqzt6f13b749z0lja0j3].[sum:Calculation_103301379542614016:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1o61bz40zqzt6f13b749z0lja0j3].[none:markets_code:nk]</field>
            <field>[federated.1o61bz40zqzt6f13b749z0lja0j3].[none:markets_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9B37EA04-B114-4FEC-BA9C-279D23211D91}' />
    </window>
    <window class='worksheet' name='Profit Margin by markets'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1o61bz40zqzt6f13b749z0lja0j3].[usr:Calculation_103301379613048834:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1o61bz40zqzt6f13b749z0lja0j3].[none:markets_code:nk]</field>
            <field>[federated.1o61bz40zqzt6f13b749z0lja0j3].[none:markets_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5BB59278-40E9-4C31-974A-57C8067FB2DF}' />
    </window>
    <window class='worksheet' name='Sales Quantity by Markets'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1o61bz40zqzt6f13b749z0lja0j3].[none:markets_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C2702CCD-513E-4B3E-AFEB-65C0CC166152}' />
    </window>
    <window class='worksheet' name='Top 5 Customers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1o61bz40zqzt6f13b749z0lja0j3].[none:custmer_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A49310C9-3DAC-49D3-AF48-B23898E0D4EF}' />
    </window>
    <window class='worksheet' name='Top 5 Products'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1o61bz40zqzt6f13b749z0lja0j3].[none:product_code (products):nk]</field>
            <field>[federated.1o61bz40zqzt6f13b749z0lja0j3].[none:product_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A6330D8C-99CF-46BD-8F43-5330EE8263F6}' />
    </window>
    <window class='worksheet' name='Revenue By Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1o61bz40zqzt6f13b749z0lja0j3].[yr:cy_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B01BF9E8-B38D-4442-B0D1-212FB28C096D}' />
    </window>
    <window class='worksheet' name='Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1o61bz40zqzt6f13b749z0lja0j3].[none:Calculation_103301379554488321:nk]</field>
            <field>[federated.1o61bz40zqzt6f13b749z0lja0j3].[yr:cy_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8F551FA2-B593-4DF2-9BE1-0E93FF82AD04}' />
    </window>
    <window class='worksheet' name='Month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1o61bz40zqzt6f13b749z0lja0j3].[none:Calculation_103301379554488321:nk]</field>
            <field>[federated.1o61bz40zqzt6f13b749z0lja0j3].[yr:cy_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2BCBF753-5D19-46A5-A375-1C04ECC55518}' />
    </window>
    <window class='worksheet' name='Profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{99CB5CF3-D07F-4740-AEAC-D7E3FDE3440F}' />
    </window>
    <window class='worksheet' name='Profit Trend'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1o61bz40zqzt6f13b749z0lja0j3].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1o61bz40zqzt6f13b749z0lja0j3].[yr:cy_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{082F0786-CDE7-4ECA-B077-A4B6799996DB}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard Sales'>
      <viewpoints>
        <viewpoint name='Month'>
          <zoom type='fit-width' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <fields>
                    <field>[federated.1o61bz40zqzt6f13b749z0lja0j3].[mn:cy_date:ok]</field>
                  </fields>
                  <multibucket>
                    <bucket>5</bucket>
                  </multibucket>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Quantity'>
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields />
                    <y-fields />
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1o61bz40zqzt6f13b749z0lja0j3].[sum:sales_qty:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>1088</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Revenue' />
        <viewpoint name='Revenue By Market' />
        <viewpoint name='Revenue By Year'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sales Quantity by Markets' />
        <viewpoint name='Top 5 Customers' />
        <viewpoint name='Top 5 Products' />
        <viewpoint name='Year'>
          <zoom type='fit-width' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <fields>
                    <field>[federated.1o61bz40zqzt6f13b749z0lja0j3].[yr:cy_date:ok]</field>
                  </fields>
                  <multibucket>
                    <bucket>2019</bucket>
                  </multibucket>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{E7B12E7F-2981-4676-B37E-BA7743C1F5BC}' />
    </window>
    <window class='dashboard' name='Dashboard Profit'>
      <viewpoints>
        <viewpoint name='Customer table' />
        <viewpoint name='Month'>
          <zoom type='fit-width' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <fields>
                    <field>[federated.1o61bz40zqzt6f13b749z0lja0j3].[mn:cy_date:ok]</field>
                  </fields>
                  <multibucket>
                    <bucket>4</bucket>
                  </multibucket>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Pi Chart' />
        <viewpoint name='Profit' />
        <viewpoint name='Profit Margin by markets' />
        <viewpoint name='Profit Trend'>
          <zoom type='entire-view' />
          <highlight field='[federated.1o61bz40zqzt6f13b749z0lja0j3].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Revenue'>
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields />
                    <y-fields />
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1o61bz40zqzt6f13b749z0lja0j3].[sum:Calculation_103301379542614016:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>17660106.0</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Revenue By Market' />
        <viewpoint name='Year'>
          <zoom type='fit-width' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <fields>
                    <field>[federated.1o61bz40zqzt6f13b749z0lja0j3].[yr:cy_date:ok]</field>
                  </fields>
                  <multibucket>
                    <bucket>2019</bucket>
                  </multibucket>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
      </viewpoints>
      <active id='20' />
      <simple-id uuid='{3F8EB4C0-4D02-43AA-8207-C9B30215B861}' />
    </window>
    <window class='worksheet' name='Customer table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1o61bz40zqzt6f13b749z0lja0j3].[none:custmer_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{68A93398-5FB7-4CA2-B8AB-83615DEF055B}' />
    </window>
    <window class='worksheet' name='Pi Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1o61bz40zqzt6f13b749z0lja0j3].[none:customer_type:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1o61bz40zqzt6f13b749z0lja0j3].[sum:Calculation_103301379542614016:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1o61bz40zqzt6f13b749z0lja0j3].[none:customer_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{47E7352D-9723-47DA-B580-56CBC6EA39AF}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Customer table' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9V3Rc2Xnv+atchQIqIBRyJAIJEAQIgCSYYzM3O0mt1JLHli3fuQ9ay2t5
      +W1m2XoYz3iWbK271h3NLF/b11K7pW51ZAYBEgABkIhEzjkUMgqVc9WZBwjHorqFpkiw1WrW
      7wmoOjjn2xtnn7P3/r7/90kEQRCIEOEFRCKRSKR/aCMiRPhDEhkAEV5oIgMgwgtNZABEeKGJ
      DIAILzTyP7QBXwWWxruZC8RTtjOVgf5eioqKn+o8K5O9hE3FJGqf4NjZCYK6ZJL1mi2PMw93
      0NI3RWzmbo5XFCD5jGMEIUhHfQ0xeZUUpBqeyvarV6/S0tLy2Gd/8zd/g16vf6rzAQg+KzV3
      Gyk5fhnTE/TJ0xAZANvAxKNOrs56yc/5C+rq7z31AJjtuoe/PB9zbx+7KsvZ6taeGejAk3P8
      cwfASHM36acuYq39D1qTsjiQpvrUMcJSJ/fnNHx/j4MHrYtoHMP4sw9zICf+iW0/d+4cp0+f
      fuwzjWZr2z6PsYZf4Um6Aot9dEmMLLVVUXThz0jTPdNpHyMyALYFFcd2arjftwjATHc1H9SP
      IJVrePlEET+79oDS8oOsdt9FkZjI5LSFVF2I2OIrZIWGaOkZISr/AsUAIR+P+oaIjYfb124x
      7kvmu8fSqH80ilcw8q0Lubx7rZWg08rhnONPYJsEmVyOTCrFsdLN//H/3KP49HFky/3MWH3I
      E4ooEjoY6hPoL5AzOryA39yOuWudlD9/E8fDn3NzRodtaphdu1KY8cbz13/x+qdunGvXrtHY
      2AjAD3/4Q3Jycra06t/+2/+OTJfJQkDP1wqDvN3i4MSRcqY7G3H6Q2TsP8lyfSezJg3ppfF0
      2ZeYfdDKWDiF7732EjFqGQBexzQ/+cf/SXSUHEGXyvrKMt/7L39C141rjM+ZqfzaX9Dxyf8k
      dsduzp+/SLz2ccsja4BtIrHkGGvd9wkIYaYGpzj3nb/kYLaWiSUrCTv2cuV0JTK1kcuvvUFK
      WhKvXTpByLHA2OgiWn0U8zMLbHokBUEgLjWb+NgM/suff5PBzjZk0QaykhKYHOtj/8t/wql9
      BU9omYvGqltIdl5iX4qCxPx9vHwomyVfPN/7wQ/A0s+evRUUHz5PcaYRqUrH3r3lnH75Imk6
      DQgCFadeoSQpmVNvvI5RFiT4GVe5ePEiP/rRj/jJT37yuTc/gDzaxJU3v0usdxkXMnYfPk9J
      kgRlehk/+N5lzP2LlO3fyclXvkNSNEQZ0yir2MPlC2eJVj1+25qyS7h4tIIdpUc5vCuF9cVZ
      xtf9RCt8zC7ZUWpNvPzalU/d/BAZANuCRqdDrdByrEDHkhDPzooSGn71L/SuySnKTMYUb0Aq
      AYPRiEwqw6DXI1No0MVEo1DKUEUbMcXGoImJRaOQYjDqGW+/S8/sMp1t7ZRXVhJ0ewhJJGTt
      3EvP7V/QOWkhSuKmsamNtZkBWocXPtO2KH0al17/Gicr8pHJNZhMRlDHsSsxwDv/8q/E7jiE
      SqPFGKNCKleh10WTlJpEV3UVZrsHVbSRKKUUXawRuVSG0aBjZaKLvsk12hvrsfs3hkNtbS1v
      v/32E/eZf32Wd9/+N7S5ZRi1euJ0GnSJO4iyjfKvv7hLUWUxUdGxRMlBrtai02hISY7lzu1b
      TE/PMDExwcTEJBZHAIM+BqVGS7RGiTZGj1qtRCkBY2IquiglcYkmVFJYGu+kf8pCW0MdjkAI
      AEkkFCLCH4Lb19/nyEuvEa2S/Z5/GWK0u515qxeA5Jzd5KfHPZUNEolEEhkAEV5YJBKJ5LFJ
      kc/nw2Kx/KHsiRDhCyfyBojwwhKJBo3wwrOFH8DO//fTj/jL//VPPvckfusc/3b7EX/5zSvb
      aNpXh/Hxcd577z3++q//GoVCwfz8PFVVVfh8Ps6dO0dXVxcWi4Xk5GR0Oh3Dw8PExsZy+fJl
      FAoFHR0ddHV1ERUVxenTp7l58yZer5eTJ0+Sn5/Pxx9/jFQq5ZVXXtkWe0dGRrh//z4XL16k
      u7ubxcVF5ufn+au/+is0Gg0dHR20tbWRlJTElStXcDgc/NM//RM/+MEPqKmpISoqihMnTjA3
      N0dpaSkSyWf5n5+MUCjEzZs3WVlZYX19nXPnztHW1obL5eLKlSvU1dXhdruJjo7mrbfeQhAE
      7t69y9TUFBUVFfh8Pvr6+lAoFFy+fJl33nkHrVbLmTNnAJD97d/+7d9+9qV9tLYOsG//XoJe
      O3W3PqF9dIn01Fgab1/jfvsw6Xl5LPQ1cL36PmZfFHsSJVy9eguroEO20kPP5ArLLikp8TFP
      3QF/7Pj9fjo7O9HpdBQUFCCTyYiOjiY7O5tAIEBsbCwHDhwgNzeXpaUlnE4nx48fx263Ex0d
      TXR0NL29vVRWVhIIBNDpdOzduxeAqKgonE4noVAIQRDIzc3dFpvj4uJQq9VotVpKS0vJy8tD
      LpeTl5eHIAgMDg7y+uuvs7S0RHJyMk1NTaSmpmI0GpFKpSiVShwOB+np6Wg0GqTSp59oSKVS
      CgoKSE1NRa/XU1paSmZmJi6Xi6ysLCorK9FoNOTm5mIwGPB4PAwNDXH27FlSU1PJyMigqKgI
      l8uFWq1GoVBw4sQJEhIS+NGPfvR3T2TZfG8tVR0zTD5qoX/KjM3lZW3oLnW901Q1jfL1r10h
      Xhvi9nu/ZNHhpqamhvmRTgbtMZTlJz91478KtLe3ExMTg91ux+FwABAOhxkcHMTlcqFUKpmb
      m6Ozs5Njx45x8OBBOjs7mZ2dJRwOA1BZWUl/fz9TU1MEg0HGxsawWCxIpVLa2trQ6/VYLBaC
      wc9yUT07XV1dlJSUABtOOqlUikQiQSqVMjQ0hEQiwel0AmAwGFCpVPh8Purr6z8VH/Q0hMNh
      RkdHycvLIxwO09vbSygUQiaTEQgEWFhYICMjA4BgMIjFYuHBgwdcu3YNp9PJw4cP2bVrFwkJ
      CQQCAW7fvk1/fz/wOaEQXtsK/YNDqBR6MrNyObI3F21okTZfFCUFmdglcuS4GB4Zx+OHnMQk
      YjPKSYmPJTx8nV27diJ9+rffV4LY2Fjm5+dZWVnBbrcTCoXw+Xyo1WrUajVms5nR0VGKioow
      m82o1WqSk5PxeDwYDAbW19cJBoOkpqaytraGUqkkHA6j1+uZn58nNTUVs9nMysoKoVAIufzZ
      o1tWVlaYmJjAYrGg1Wrxer0YjUb8fj8ejwepVEpzczMWi4WMjAxsNhtLS0tYrVaKioro6elB
      oVAglUq3ZVDa7XYEQcBgMDA9PY1er8ftdrOyssLq6ioZGRlIpVJsNhsKhYKkpCSSk5OZmJig
      oaGB+Ph4LBYLfr8fo9EoDlDYchcoyEh3F7aglB35u7CZR7F45eTnZ2AeH0Oq0mBMzkZim2F2
      1YMuIZFUnYzh0UmUxhRStSHCunQM6mdu/1eC1dVVNBoNjY2NHDlyhJGREVQqFTk5OYyMjOD1
      etHr9cTHxzM1NcWOHTuwWq2sr6+Tk5PD2NgYWVlZaLVahoeHkUql5Ofno1KpCIVCWK1W4uKe
      ziH025jNZsxmMxKJhF27dhEOh9HpdHi9XtxuNxqNhpGRETIyMjAYDEgkEtbX14mOjiYcDuP3
      +1Gr1QwNDZGTk4NW+2yhnB6Ph2AwSExMDDabjfHxcTQaDQUFBVitVnQ6HVKplPr6esrLywEY
      HR0lJyeH9fV1VldXUSqV5OfnMzMzQyAQYNeuXSgUiogj7IskEAgQCoVQq5/sqeDxeFAoFNvy
      VP+qIwgCbrebqKioJ150f8oTLAgCoVDouRkZIcKXCYVC8bgnePP1FSHCi0LEERbhheYxP8Dj
      UyAvN3/xc1q6+1l0y5HYJvCrEz8zek8Ih/D6Aih+Y64qhAJ4/GEU8s+O9htoakaZkcaTzIYD
      Pi8hpMi22FISwn66Gmuoa+4m2pSJVhYCmeIPvgvl8/lobW1FJpMRE7PhD/F6vdTW1tLf34/R
      aOT27ds8evSI+fl5TCYT169fJxAIkJiYiEQiYW1tjRs3buD3+wmHw1y9epWuri6kUikqlYqb
      N2/icDhITU3ddvvdbjc3btxgaWmJrKwsBEFgaGiImpoa/H4/JpOJ6upqBgYGSE5O5uHDh6yu
      rpKQkMDMzIy4SN4uXC4XVVVVTE9Pk5GRwfT0NMPDw6SlpQEb9/Dc3By9vb2kp6ezvLzMzZs3
      sdvtpKamEgwGuXPnDunp6fzDP/zDVn6AAGaHnLfeeouzlYWYJ/pZcwdx2y2Y55fwh8J4nVbM
      8wuszg7z05//ihWLA4fDhs2yhs86R8fIIkG/m4V5M3a3F9vaMub5RXzBMBPdvTiFMOsrCywu
      rxEMhVhfWWRxcRG3P4zD4UAIB3G63JgnBli0ubCtrbIwP4/DGyDkd7Ngnsfm2giL9S0O8mBO
      yuuvnEURtHPtn/9f2iYW8QeCrC0vsrRmIywEsVntrK1a8PtczJvncbj9BLxO5s1mrC4v270j
      4HK5iI6OFvfJYWMAFBcXU1BQgMVi4Y033uDy5csYDAYePXrEkSNHWF5exm63A/Do0SPOnTuH
      zWYjKiqK73znO1RUVKDX62lqauLEiRPiPv12c//+fQ4dOkRlZaX4WWJiIq+//jpms5mxsTFi
      Y2MpKSmhubkZjUaDx+NhYGCA6Ojobb35AQYHBykqKsJoNDI/P4/P53tsq1UQBPx+v+gc9Hg8
      vPzyy/j9fpxOJ/39/SwtLYlT/S3eAH5qPvgVUwtLrIeikNinUetN3P74fXo6W1iUGOiqvolX
      IifktdHRP05aRg4Prv8z4xYF6dFOaicFnIP3mLD4UWu1THQ0Unv3DovKDGQLkxjz4/nwXz/E
      K5Uj9y5T1dDFynADqzF76Gm8Sl5GCtVNrQRtcwiGOKp//iF+mZuGjim8Ux2MrDroau8lq6iI
      KE0Ua6MdtPROkJqVRl9TI0FDEirnHLWtg0z3PUKapOPdf/x3BGM8kx01NLV30z26TmC1i5b+
      edS6eJLjdJ8pHH9aNBoNgiDg8/nEbUqVSoXb7WZubo6CggKUSiUtLS2UlpYyPz9PUVERbrcb
      uVxOTEwMHo+H+vp60fOq1WoZGRlh586dPHr0iPHxcWw2G5mZmdt+w3V0dDAxMcHy8jKZmZnI
      ZDK8Xi/Xr18nLi6OnTt38uDBA6anpyktLWViYgKfz4dcLqe7u5vo6GgMhqcT2n8WEomExsZG
      VldXKSsrIzExkfn5edLT08XvY2NjmZubIz09HZ1Ox/j4OHK5HJ1Ox+LiItHR0aSkpPDjH/94
      a09wbFYxb731Fsf3brjY/U4Lqz455YdPUpgYxk0KJ44eYmd+ARnZuewpSEemiePk6WPEqmUQ
      DjLvgJMnj5OpDTK84qMg24TF6gJArtZTXLKDxakxxsdmydhTSWGWCcmvB2LA78b/G34UjT6R
      yiMnCTrmmVn3c+r0ceKlVuxeCIWlHLrwBq/sN3Gtdoy87HSKy8oJOFbJLK5kb04MyxYP0cn5
      nD5YxOzsEvml+zlUmkvGjt0kaAMMj8wR/gI2hW02G1NTU+zbtw+tVovdbkcul6PVahEEAavV
      isViEUXlBQUFfOtb3yItLY24uDjm5uZITk5GqVSSkJDAq6++itVqJRAIbLutsbGxXLlyBZlM
      hs1mQxAE5HI5b7zxBk6nk6GhIUpKSsTYn5dffpmcnBzC4TCVlZVMTk5uqz0zMzMcOXKE3bt3
      Mzs7+7nHj4yMoFAoKCkpYWJigv7+fhobG+ns7AS29ATL0WHl7bffxpRbRlpSJjFpuRwqmGJ8
      fBKt6ST7ds7y7vsfc/TkKXK1Xu61DJGStQONXAqaOLJTNBTl5HP9V++xq6yCRK0UvyKWzEQ9
      xnAWqqAP27oDlT6WXRV7aK5vYGZtmowUSNTAnQeDJCQlE6eIQhOlwLY4wgfveak4fpF0Zrn6
      3ockZB0gJRpCdhdNd++x7oZzpy4SsyajruoGp46WM9pQx4I8lrMHUgjN+ZDIFJw5fZj67jEk
      OXuIwo7DEyQxxbitT3/Y+IfV1tYSCASQSqVMT0+TnZ1NX18fo6OjHDp0CEEQKCoqQiKRsHv3
      bm7fvk1WVhbBYJCOjg4SEhJoamoiJyeHmJgYZmdnyc/PFx1V165dIyUlBYVCsc3WQ0lJCTdu
      3CAuLg65XM7U1BTLy8uMjY2RnJxMQUEB1dXVhEIhjh49isvlIioqiuTkZGpqati3b9+22pOd
      nc39+/eRSCScPn2aTz75hJWVFXw+H9HR0WRmZtLW1sbMzAw2mw2ZTMbKygo9PT2cPXuW8vJy
      +vv7Rd3yY36ATTf9H5Kl4QdYdHvZlfzbKTVcPKwboOzoPn5vFd2XBJfLxfr6urhg+zwWFxdR
      q9XbOoX4qhIKhZiamiI7O/uJg++0Wq3kSzcAIkT4ovjUAIhERUR4kZBKpY97grd7ByFChC87
      WyyCw6wuLuILCSijdEQrBWSqaJTyiPP49yEcDrO2tgZAfHw8EokEQRBwOp3I5XJxp8dut6NU
      KnG73WLIcXx8vLiwDYVC2Gw2jEYjNpuNYDBIbGwswWCQtbU1YmNjUak+nfbwWfF6vaytraFQ
      KEhISABgbW0Nn8+HVCrFZDKJYd6xsbFYrVZx+9br9aJWq5/5wRoMBnE4HGKe0c3+jIuLw+Vy
      4XQ6P9V+u90u/m6xWDAYDKjVamw2G4FAgPj4jbSPWwwAJ//y33/K3qNHMaTl4x6uIr7yGwRm
      xshK0dBl1XOy+MkWcy8yc3Nz9PT0YLVaOXXqFCkpKdhsNmpra0lNTWX//v34fD5+/vOfc+DA
      AVQqFQsLC4yPj/Pmm2+KvoOOjg6am5v53ve+x82bN5FIJFRWVjI2Nobb7UYikXDlyvZLUltb
      W7FarSQkJIg3zczMDKurqwwPD/ONb3yD27dvo1Qq2b17N4ODgygUCsrKynA4HBQWFj7T9QVB
      oLe3l+HhYS5evIjVahX78/jx43R1dQGg1Wo5deoUsOF9f/vtt9m3b5+opxAEgX379lFbW4vf
      7+fEiRPA5whi5EoNcXFxGPTRuAEIsL7sYG2ilo/6wkQpvotsoY2+aRt7Dp+lLC/pmRr7VSQ9
      PZ2kpCRaWlrEJ5LBYODYsWOYzWYEQaCrq4vy8nKkUinFxcWkp6cTFRVFbGwssOE3cDqdZGRk
      YLFYKC8vx2g0Mj4+jkQi4fLly1RVVREOh59JfvhZOBwOEhMTycrKEs9dVlbG8vIyBoOBlZUV
      jh8/TkxMDC0tLeIbbW5uTvQKR0VFPfX1JRIJe/fuFdVxm/3Z2tpKVFQUly5dYnJyUvSab/Zn
      WVkZEokEr9dLcnIyk5OTjIyMsH//fmJjY+np6QE+LxhOKkWhUCATOzXI/OwChSUVlJ24TFmW
      hGtX6wn47IxOmZ+6kV9lvF4vra2t5Obmijf0b7K6ukpXVxezs7OMjIwQDocZGxtjx44d4tRh
      U0A/OjrKysrKF7pZUV5ejkqloq6uDo/HA2zcZMPDw+Tn54u/A+h0OkpLS0lKSsLr9WK1Wmlr
      a9tWezb7c8eOHcTGxtLf34/b7WbPnj3A4/05NjbGsWPHRP2FTCYTbd3s2y3fAAG3nbm5OYyS
      6Mc+V+niWLrdyEjuJTIzTRhTsklLM21rQ78q9PT0iE+oiooK7HY7sbGx3Lt3j7W1NU6cOMHZ
      s2cxm824XC48Ho/41PX5fCwtLXH06FHcbjdms5n09HRqa2uRSCQcPnyY0dFRPvroI9Rq9bY/
      /WEjo8X6+rq4RW61WlGpVMhkMnQ6HXK5nPfffx+lUsnRo0cxGo0sLCyQnJxMb2/vMwfobT7R
      m5ubWVpaQqvVMjMzg91up7i4mJqaGgoKCgiFQiQmJqJUKh/rz83ppFarJT8/nzt37hAIBMTp
      0haKsDDW1VV8IQGFJhqtQkCq1OD3+NBoVdgtFuRReuRhL3aXl6gYA9Ea5TM19quIx+MRX89y
      uZz+/n4qKyuxWq0IgkBMTAxRUVEEg0HC4TByuZxAIIBKpWJ8fJxgMCg+aTcXlU6nk2AwiMFg
      IBgMYrVa0ev1KJXb3/8+nw+bzUZ0dDRKpZJgMIhcLiccDovX21wEGwwGwuGwqE1eX19Hp9M9
      k4daEATsdjterxeZTIZarcbl2gil0ev1OBwO0Zaenh727dv3WH8Gg0FcLhd6vR6FQoHD4RBt
      lUqlEUnkF8nmPPZJn9ShUEjMwBBhawRBENdAv48k8lOKsOeVWiPC0xGRqP5+/L799dgAEAQh
      MgAivFBEvFoRXmh+9y5Q2Mf9m9eYc4Qp2n+ckh2Jv8dpPdy+/ZDz5089u4V/5CwsLHD//n1k
      MhmXLl0S98abm5tJSkpi586dtLe3Mzw8zPHjx5FIJNy5c4f4+HjOnj2LWq1mZmaGpqYmUlJS
      2LFjB3V1dfh8PkpKSoiLi6Onp4dLly49l/Qpg4ODtLW1ERcXx4ULF5BKpSwvL1NfX09CQgJl
      ZWXcvn0bQRA4cuQI3d3daLVaKioqMJvN5OXlPdMaRhAEZmZm6Ovr49SpU0xMTNDZ2YnT6eTC
      hQv09/djsVgoKSmhuLgYQRAe60+ZTEZnZydHjhxBo9Fw79497HY7ly5dArYaAN45WsbC/PC/
      voLHG8BpMTMwtkBGfiEanwN5bDy+5SVUJj0L41PYHD4ydxai8q0yOD5O/9gM55+62V8djEYj
      r776Kg8ePMBqtYq5MjMyMvB4PHi9Xmw2G2+88QZ1dXWkpqZy8eJFkpL+06k4NDTE5cuX6enp
      QaVS8Z3vfIeenh5MJhMKhQKj0fjc7F9ZWeHrX/+66OASBIG+vj5Onjwp7vpcuXKFiYkJRkZG
      iIuLw+/3Mzw8TE5OzrYs4KOjo0lISCAYDFJUVERhYSH3798XQ0Xeeust8djf7s8DBw6QmppK
      IBBgbW2NlJQUdu7cycjICLDVFEiTwalSLW//7OeMzCxSdasOhVqg6noVfQ/bMLt89Nc2suhc
      pKb+EWHnJI2tj7hx9R5qvQFZZOcC2Nj6rKmpYW1tTYzrV6lU4k27ma5Po9GIjpqqqio++eQT
      vN4NvXN+fj7Xr19ncHAQh8Mhbq2aTKbH4oWel/3vv/8+N27cIBQKEQ6HWV1d5c6dO1y9ehWA
      lpYW+vr6KCgoEO1zu91cu3aNgYGBZ7q+RCIhLi7usTZuquU0Gg2rq6u8/fbb9Pb2Ap/uz9jY
      WHG7djMZsclkEjXav3sAeOzE7jrCG+fLaGl8iCskIzsnC4nfSTAcJOAPYLVvnCQm1kRWehIE
      XXiDarKyUlH+odMxfElwOBycPn2aHTt2MDU19anv1Wo1i4uLoqQxLi6Ob37zm2IaQICkpCS+
      /vWvi/+8mZkZ0tPTkcmevzIoNTWVb33rWwSDQbxeL1KplKSkJM6ePUtMTAyLi4vs27ePgwcP
      MjY2xqlTp0hMTEQul3Ps2DGWlpa23abR0VHR+XX06FEuXbokyiN/uz9/E41Gg9lsZnJyUnwY
      /W5BjN/O3eoaVtwyDp9+CYVlmLr2UYoOnCBDaeF2Yz+J8akUH8pjZnSNvBQl0zYlascYHVM2
      jHHJvHS0Ytsb/8eG2WymqamJmJgYjh8/Tk1NDZWVlVRXVxMMBtm/fz9yuZyuri7Onj2L2+2m
      oaGBrKws0tLSmJqaIjMzk4aGBvbu3UteXh4TExNkZ2cjk8mor69namoKjUbDa6+9tu1vg6mp
      KR4+fEhRURHZ2dlYLBaMRiO1tbUkJSWRn5/P3bt3kcvlnDp1CplMht1uR6fTUV1dzcGDB0lM
      /H3Wj48TDod58OAB4+PjxMTEcObMGZaWltixYwcADx48YHFxkePHjzM4OEhhYSHr6+tif46O
      jjIwMIBareall15iYGBAfCgZDIaIIuyLxOVyia/oJ+E3X/URtiYUCrG8vExSUtITrzs+UxIZ
      SY0Y4UUhKioqEgoR4cUlUiQvwgvPFgMgyEBHMw+bW1myeb44i75iuFwu2tvb6e/vF4PhwuEw
      c3NzrK6uAuB0OmltbWVxcRGLxUJzczOTk5Ni7PpmPs6uri7C4TALCwu0trbidDqx2Wy0tLQw
      Pz//3Npgs9mYmZkRfw8EAvT09Ij6hcHBQbq7uwkEAoyOjorlndbW1rZFu+D1ehkdHRXDdAKB
      AMPDw4TDYWZmZsSieZusrq7S1taGz+fD7/czOjqK3+/H7/fT3d3No0ePxB2iLQaAm6rqRnTq
      MO/96jqRCKGnw+l0olKpGBsbY2FhAdgIHx4cHGR6eppwOEx1dbUo2rBarcTExNDd3Y3VagU2
      HGHT09NoNBpsNhuNjY1ER0cjCAIjIyNotVoaGxufi/2CIFBXV/dYra+2tjZsNhtyuZy5uTmm
      pqZwOp00NTUxPj5Of38/Y2Njov3Pev3R0VGGh4dxuzd0id3d3dy5cwe3283Dhw/Fkk2woR++
      f/8+APX19UxMTDA6OorNZsPj8Yj1zDb9Blv6zlUxceTn7eDeg0H6m2/wsGsOdVwWe/ROwrte
      YuRX/xeFb/41Ex0PKEhS0tI/RVTCLnIlZrptYUr2n6EiL+GZO+GPmfj4eHp7e/H5fOLuj8Fg
      oKysTBRt2Gw2JiYmiIuLIzk5merqalQqlVhaaGpqCr/fz/LyMlKpFI/Hw/T0NOnp6VRUVDAz
      M0NKSspzsX9kZIScnBzRhxEOhzGbzSgUCnQ6HZmZmVitVpxOp1gfTCaTsbq6is1m25DUPkNi
      L4lEQnFxsbg5Y7Va8Xg8ZGZmIpfLkcvlTExMUFBQAGy8cVNSUqioqODmzZvs3LlTjBDV6/V4
      PB7m5ubEMqlbrgEsE138x4fVnLpwmomedV7/sz8nOjiHLjGWvo56ZMkljD64jyBV0VLThDsk
      IxR043ZaySp7ifIX/OaHjdj/AwcOkJyczPLy8md+bzKZOHbsGA0NDahUKo4cOSKKNwAUCgXl
      5eUolUpRLpmfn09ra6tYMfLgwYPPxf5PPvmE9vZ2WltbsVgswEZowsGDB5mZmWp5D9UAACAA
      SURBVGFsbIz8/Hz27NmD3W7nlVdeobCwULxJHz16tK32VFdX09vby8OHD+nq6hJtWVxcBDb6
      c6udzN27d7Nnzx5xSrdFnWA/w9N2vv9nb2EyxOB3jHKzqgGvLIEjJ4/S/K//nV1f+69M1/8b
      uae/S6J8melVH3FJqegDTmLyS0mJeX4u+j8Went7qampYWFhgaKiIkZHR5FIJHz44Yf09fVh
      MpnweDy0tLQQFxfH/Pw8Dx8+xOFwkJ2dLcogq6qqWF5e5ujRo2KWhIKCAurr61leXmZycpKC
      goJtl0VWVlZSVFSE3+8nOzubhYUFtFqtmO+0uLiY+vp6ZmdnycnJQafTsbS0REpKCnV1dWRk
      ZDyTLDIcDnP//n3q6upYXFzk8uXLHDx4kEAgwL59+2hubmZsbIyEhARCoRAqlYqRkRFqa2vZ
      tWsXMzMz1NTUMD09jUwmE4toZ2dn89Of/vTvItugXyB2u53x8XGx0PXnMTExgVwuF2vgRvjd
      hEIh2traKCsre2Jp6KeK5EWI8CLxmZLI55FjPkKELyufkkRGNKgRXiQinuAILzRb5gb96f/5
      T8SkZWPKLSPWPYCh+GVyEz6dgDXsdzE6t0ZBzn8u1gTnEr2LsCf3s0Nha//jXQq/8w0+L1DW
      51pjctGDSRUiqDNh0v1xRUaazWbq6uoIh8O88sor6HQ6VldXqaqqAuDMmTOYTCbeeecd9u7d
      SzAYpKenB41Gw6VLl1Cr1QwODtLR0YHBYODo0aOiE+jIkSPMzMxgNpvJz89n//79z6UNLS0t
      LC0tiblHp6enaWhoICUlhcOHD/PBBx8QCoU4c+YMTU1NREVFcejQIcxmM4WFhc+sChMEgdra
      WgRBYO/evdy6dQuJRMKFCxe4desWPp8Pg8HAa6+9Jh47PT1NZWWl6LXWarWcOHGC1tZWYmJi
      OHToELDlABCQx2aJcrOGa81EhcJM9T2kY8zOyXOnCcz30tAzR7pRwi/vtPHyq98iJcaPz2on
      MSMZV1CLa22Ge/Vt5JQfJmzuZ3jRx7GzZ3DZ7ASCflrvV7EcMnLySBk9D+qwKZM5faiUheEW
      2kbXObB/Nz6nlZvXrjKvzODsoZ3oU3eTyCLmUDx5STHP1LnPm6WlJQ4ePMj6+jpOpxOdTofV
      amX37t0olUocDgfr6+skJiYSCAQoKioiPz+f+vp6/H6/qAl+9dVXGRgYwOl0cuXKFZaWllhb
      W8Pj8fDmm29SXV2NIAjbnkPI4XBgt9tFnYEgCIyNjfHKK6+g1WoZHx+nvLwcg8FAT08P6enp
      +P1+RkZGxLJPz8pmO/V6PZOTk5w6dYq1tTXsdjvf/va3GRsbE491u93IZDK++93vUlNTw4kT
      JygsLKS5uRmZTMbBgwcZGhoSj9/aETbVy9tvv01958YF/Ktj/PyjuyxPtPKr6lrev9HPhfNn
      2LWriJ17yjhWnkdn7UdYozNJCC3SNTbP1atV7D15nuyEKBwOJysTLVxt2tBjeh1TNHcukp2Z
      ynh7PfaYPFJcvdzvauXjhiUunj2O0rfCyJydovxdHD5zml2pGu7cbaazoRHprz2lX2Y2E7kO
      DQ2Jnl2j0cjQ0BCdnZ3I5XLm5+fJyMggGAzi9/u5fv06MplMTKZbXl7OzZs36enpwe/3MzMz
      w8LCAsXFxWRnZ/PBBx+IYRXbTUtLC+Xl5WKmtU1J5NWrV3n77bex2+3o9Xo0Gg1RUVGEQiFC
      oRBer5d33333mXODhkIhuru7KS4uFkufqtVq9Ho9LpeLYDDIzMwM2dnZwEYohFarRSaTIZFI
      kEgkPHjwgOzsbGJiYj61RbrlANCn5HHx4kX25m84MiQSKQnpBbzy1l/y2qE8ZJIQTqcLQSpH
      4vNg9/hRGJLZnZP86wLVEhQyCS6nA9fyDF1LIU4d3ovs11dVqhM4eaqU+zc/YMbqJ+B14wmE
      kcsVSIUATpeLUHjjPCq1DPu6HYyFJAXHGJXGsyPmy7+EmZmZoaSkhB07djA/Py+64vPz89m5
      c6dY4rSuro7Ozk6WlpbE7BCbefiVSiUnT55Ep9OhVCqZm5sjLy+PYDCIyWTi8OHDpKSkPBeJ
      ZCAQ4M6dO/T29oo5QjMyMqisrMRkMmEwGOju7mZoaIjY2Fj279+PTqdDq9VSWVkpxu88LaFQ
      CLfbTW1tLZ2dnYRCIcbGxujt7SUxMZGFhQWSkpKQyWT4/X5UKhXz8/NiMGFrayuZmZlotVoC
      gYAYtrFp1xaKsABttXdZ8YQxpu8kRx9EFZ+NY7aP/skVCvZWEuMz0zG8wN4DB3FM9bAmMREf
      5SclIw+Vf4XhdSWZ0R4etvaSXliKzzyCS6LCkJpHlH0ZfU4SfU0tBKIS2b83n6FHrTgVCRws
      28XKRDe903ZKSnbh9gikGqU0t/SQW7qXyfr38Ox6kzO7nl82hO1is1K8QqFgz5491NXV8dJL
      L9He3o4gCFRUVKBUKnE6nfh8PlwuFwMDA6SlpaHX61lcXCQrK4tHjx5RXFyMRqOhubkZQRDY
      uXMngUCAmZkZDh8+/ExpyLciHA4zPz+P0WjEbrdjNBppbW0lISGBnTt30tvbi9frpaKiAp/P
      h8fjQavV0tzcTGlpqVjY4lnYTMwbHx9Pe3s70dHRFBYWsri4SHx8PHK5nPr6ekpKSvB4PAwO
      DnLo0CFGRkYwm82o1WoKCwvp6ekhGAySk5NDeXn5H58kMuBY5tH4OhWlBfyxFYv0+XwEAgGi
      o6M//2A25t8qleq5JL39qhEOh7HZbBgMhqeXRIbD4YgkMsILg0ajiYRCRHhxiUgiI7zwbBkO
      3dM9RGLS01R+ERhpq+VeywDG5HRi1C9uWLTH4+HOnTu4XC4xZUcgEKCpqYnBwUFSU1Pp6Ojg
      wYMHmEwmZDKZmGtzsyhdOBymsbGRgYEBMjIyqK2tpa2tDb1ej9VqpaamhsTExOe2CF5aWmJ8
      fFxM1zg2NkZNTQ0ACQkJjI6Osr6+jsFgoLm5WVysms1mdDrdM+cGHRoa4t69e6hUKqKioh7r
      z76+Ph48eEBycrKoqpuenqa2tlZMP3nz5k28Xi8JCQnU1NTQ2tpKbGws//iP//h3W7wBvDQ2
      topGhIJBgsGNfdhwKEQgECAUCjHd18zMuv/Xn21U4wsvd/FJb4DzJ/fhtdtp+OSf6ZxxEhYE
      gsGAeJ5QKEQoGEIQNoLwQuEwwq8D8kKh7d/T/kPQ1dXF7t27sVqtogbYZrORkpJCamoqIyMj
      pKenc/78eerr63n48CGFhYUMDw+LlWW6urpQq9UcOXJErJTy6quvYjKZ6Ovr46WXXqKhoeG5
      1A7bHHwTExPAxr2g1Wq5ePEiw8PDooNvaWkJq9Uq+gn6+/u3TZug0+nERLgtLS1if27WATt4
      8CCtrRv3qt/v59GjR1RWVlJTU8P8/DwnTpxgbW2N+fl5lEolr732mjiYnyidsH2+n5+/X4dE
      AocuX6Lv1lXCei0WdyL7Y6dQanK494t3kMRmc/7iORINmcQ67vHxHT+nTu2j61E3nrV4lHuM
      1LYME/K4ufC9b/LBT/4b+QdeIilqldb+ORSGHexL8vNw0kJh2QnOHijYlg78QxIdHU11dbWY
      ECshIUHMddnR0UFZWRlLS0vcunWLgwcPsrCwQHZ2Ng6HA4fDgU6nY2FhAavVyuLiIhUVFWKZ
      0JMnT+Lz+fjwww+xWCxiaaLtpKenh71799Lf3w9sSBRVKhUffvghqampGAwGdu/eTXt7O2q1
      munpaeRyOUqlkqGhIY4ePUpycvJTX18ikaBUKvnVr35FQUGBmHHO7/ej1+sJhULcuHGDAwcO
      ABue4NTUVJKTk1EoFOzcuZPJyUkxV2hfXx8rKytcuHAB2HIK5KOtbZB9+/eyMNRGIPMYRzMD
      DI/OsyhJ48++tY+uB/Mk6ex41bF4hTi+9foZtCo5giBlV/lBkuXTfFBnYW+Ogl1HXsM72UPq
      wQvsjTbT743HbfXwv7x1jroPrqFIyyMjNZGMZCNrSyu4pNGU5Kc/dcd9WYiPj6esrAyv10ta
      Who6nQ6n00lnZyeVlZVERUWh0+koLCwUS6kmJiYyMzNDUlISUVFRLCwsUFlZiUQiweVyceHC
      BTQaDZOTk5w5c4bi4mLRM7zdvPfee5jNZnp7eyktLRWzWxcXF9Pf309GRgYymYz5+XlycnLY
      vXs3UqkUu93O7t27GRoaEtMYPg2CICCTySguLmZgYICysjKxtvKmxvell16it7eX/Px8QqEQ
      4+PjpKWlMTY2hkwmw+l0UlFRgVqtpry8HL1eT39/P//+7//+d1s8LmRIHbP8+9vvUHnwALa6
      29xBy5mXzxC8/hG/eG8MtyyVaEMCytQduMY/4Ge/XOPiy+cx+Bf48EY9fn+Q/UdfJtEV4kbN
      TS4eLuB+7VV8gppXv5FAcCoJiVTD/uP7qO0y449Pwef1EJLIkIW/GrqE5eVlampq0Ol0mEwm
      7t+/j8lkoqenh4mJCfbt28fw8DAOh4Pc3FwyMzN59913SUtLQyqV0tXVRXFxMbdv3wbg6NGj
      fPTRR/h8Pk6fPk1LSwuDg4NUVlY+F/t/+MMfEgqFaGpqQqFQMDExwezsLFNTUxgMBjweD+++
      +y4WiwW1Wk1eXh4AO3fupKqqin379j3T9cPhMPX19czPz5OUlMT6+jofffQROp2Offv20d/f
      zyeffEJxcTE9PT2kpqYil8v52c9+xrFjx+ju7sZmszE8PMyBAwdobm7G7XZz7tw5YMsqkb8L
      D/VXrzOxamf30SvsiwjfnxiHw8HCwoJY9fHzmJ2dRaVSYTJFStB+HqFQiIGBAXbt2vXE08CI
      JDLCC82nJJGR5LgRXjQ+9a6IvBAivEhsKYgJh8II8Ou4agDJtgkuhHAYpFI2zyYIAgIgfYrz
      bw7aL0NB6U1bwuGwGI/+mwWyJRLJRlt/LV7Z/F4QBHHffPNvN3/fLAK9efzm3//m95vfPa82
      /fb1flN889u2weP/i9/Hrt/um83PNotgb3W93zx+8xybPwOf6i/4rW3Qx0XxTv7v/+1vmV1e
      ZcmrYL7zOi59IQnRnx4zIY+NtoFJ0pL+c0Es2OdoGXOQZtJ9ZkNv/PR/EL2vnM1vrZPtXO+c
      pyjnP5MoORdGGbJISNQEaO+ZICE54TMjQIfqbzLo0ZKZ8NnX+iIRBIGmpiYaGxsZHR0lJiaG
      9957j4mJCTIzM1GpVNhsNq5evYrH4yEuLo6PPvqI7u5uBEEQv5uYmCA/Px+ZTMbQ0BA1NTW0
      tbWRlpbGO++8w/j4OEajkdHRUW7fvk1xcfFz0QMIgsC9e/doa2tj9+7dAPT393Pr1i2ys7Px
      er18+OGHdHZ2AlBbW8v4+Djx8fFMTEyQmJj4xAMgHA7T1tZGQ0MDeXl5KBQKBEHg4cOH3L17
      l5WVFdFT3tzcTEpKCh9//DH9/f0oFAoSEhIIh8M0NDTQ3NxMYWGh+PO9e/fYtWsXbrebn/zk
      J5SWlvLjH//477YYAH66+2e4cOkCGSmJLE/3EZW8k8W+Bu42dqJLzWSxr4E7jV04Vqd595Mq
      ZNGJWOZ6GR8aRxmjYdmrJso5wbVbtQSjjMx3N3Gv6RHa5GxWB3pJLCmg7dqHdI0vk6BXMecI
      Y50dJS4lg66m+/S2V3PzwQSp6Uk43AHiNX5uX7/JrFOKwjbOjer7OGU61O5l3NqkL8UAAMjI
      yCA3Nxen04lUKiU+Pp6Kigr0ej0SiQS1Wk1KSgperxeNRoPFYmH//v309/fj9/t59dVXCQQC
      KJVKtFotcXFxxMfH43K5iI+PJxAIcPjwYRISEkhLS8Pn85GamrrtWeFgI9Oy1WpFIpGIW5wm
      kwmJRILRaMRgMJCWliY+oTUaDSqVCpfLJYZnPOnAlEgkpKWl4fV6xQqYoVCI0dFRXn/9dRYW
      FsjNzSUtLU2USHq9XkpLS5mcnCQ3NxeJREJWVhY2m42MjAyys7NJT09HrVaTk5MjlnzNzMzk
      xz/+8VahEOC1rTIwMMDs8kaWX9/KOB/dbcVrnaGpo5na1nW+/rVXKNtbzu7ySs4eLGKsuwXt
      jr0kscbA5CJ36jt46bWvUZgczZrdiWd1mLsdG251v2eViTkniaZYJBsTIAzBFdrHRhk2e6gs
      q6Di5Fl2mZQMjc/SdL+OHQfPc3xvLutra/i9Nm7XPXyGf+/zwWKx0NXVxZ49e0hOTsbpdFJd
      XS1mh/5NDAYDmZmZjI6O4na7xWmSTCYTp06CIDA+Po5cLkelUqFWq2lsbGRwcPC5t6W+vh6D
      wcDKysrv1IrMzc2JbzOTyURUVBRer5eOjg7a29uf2YbNASSRSAiFQmKiXr1eT3p6OmNjY3g8
      n53Cf7PvduzYwejoKD6fD6fTydraGvA5kki5SkNcXBwa1ca0R67WkpyUyu79xzmwKwe1xEJ3
      bz+OgARsSwzPLCPXxZOVaNiY20ulxEVJ6OnqZnZmipElD4UFOchlv55/yaPYuTOdR433MFs3
      SoLuOnSU3vd/wY5DR5FrNKyMD7Ji32hcvEHL+GAfozNLdPYNU1BYSIzmyyWLEQSBhoYGlEol
      8/PzWK1WoqOj0Wq1hEIhlpaWcDqdDAwMMDY2xvLysqh1zcvLQ6fTUV9fz/T0NFqtlrW1NcbG
      xtBqtfh8PpaWlsTMzKFQiMnJSSYnJ+nv738uOZ1yc3Ox2Wy4XC7cbjdWq5W5uTnGxsYYHBxk
      dnZWlG2urKyQnZ2NUqkkLi4OnU73e+mUw+Ew4+PjTExMiM5Bl8uFIAg0NjbicDhYXV0Vy8lu
      SjQBcnJysFqtuN1uhoeHmZycFB8qbrebhIQEDAYDer0eu90u1hPYQhEWYmp4CIc/jDY2iXhN
      GHl0PF6LmYU1J4np2aiDVqYXbWRk78C7NodTEkOMMog+NhF50MGSW06sys/ElJnY5HQC1iX8
      KIgymlB4HEQl6DCPTRJSxpCeZMDllxC0TvPBnUd8/8/fQhn2MTU2hT4pmWAgTLxRw/TEJJLo
      BIwyN0v2IFE6PXFqKUFFFLqoT6ds+aIRBIHp6WlRzZWeni46tOLj42ltbWX//v2iZjU5ORmX
      y4XP5yM3N1e8qePi4nA6ndjtdtLT0zGbzcTExJCamsrMzAyhUIisrCzMZjN2ux2ZTEZBQcFz
      WwdYrVbxye50OrFYLEilUjIzM5mbm0MqlZKdnY0gCAQCAVQqFRMTE6Snpz9xkb9wOMz09DRO
      pxOlUsna2hr5+flotVqmp6dJS0sDNnTWarWarKws8W2QkZHBgwcPKC0tZWlpSZxeZmRk4PP5
      iIn5z+whNpuN6OhodDrdl08SabcsEZDriI3R8CXY1NlWNjMrPKnE0efzIZPJtj3A7Y8Ft9uN
      RqN5okW0IAh4vV7UavWzSSI3y9BEiPBVR6VSRUIhIry4RCSREV54ttADePnwf/wb0fmlhOYH
      GLbKSDI8H8ndi4bD4eDGjRuYzWZSU1NpbW0Vc23Oz89z/fp11tfXSU9PF0v+3L59m/7+fnJz
      c+ns7KSuro6kpCS8Xi9Xr14VF8vPg/HxcVGOCbC4uMjVq1eRSCTEx8fzy1/+ks7OTnQ6HW1t
      bSwvL2MymZiensZoNG67h9put1NVVSX2RX19PampqWg0GgRBoKurizt37hAVFUU4HOaTTz5B
      EAQMBgPV1dV0dnaSkZHB3//932/lB/AzbR6l4V47zuVpJpeduKwrTExO4/IFWV1dRRDCWNYs
      OGxW/OEwDquNYMDH7NQEs4uWbW30V4mRkRFKSkpISEigq6sLr9fLK6+8QnNzM/Hx8XzjG9/A
      6/Vis9kAePToETt27ODSpUtYLBZWVlb4+te/jtFopKmpibNnz1JeXv5cbPX7/fT29or75oIg
      0N3dzblz5xgfH8fhcGAymfje976HTqcjJiYGn89Hf3//M+uBP4twOExHRwfr6+tilr2TJ0+K
      nuhwOIzBYOCb3/wmQ0NDtLe3c/78eebm5hgcHCQhIYH9+/eLPpQtp0CquALiPCMseMKE3Ct8
      +NE1Rgfb+eBmM7d/9QsWnDY++vg6HTW3WPL6aay6w0h3A+/dqGNwYm5bG/5VIjk5mcbGRh4+
      fIjP58Nms/HBBx8wPz+PQqHg/fffJxwOi1t3q6urtLe389FHH7GwsMDMzAy/+MUvmJ6exmKx
      cP36derr659LIGNnZyf79+9/LA5HpVJhMBgwGo24XC76+/t555138Hg8LC8vi36DqqqqxxLX
      bgdzc3PExsYSFxeHz+cjMTFRrL4JG06zxMRE2traKCkpQaFQEBsbS0JCAtHR0YyOjnL37l2x
      btnWawCJlP2Vu2hu6iXoceDTmDh2rBzP4jJHy1K5fe0mutxKpEKQgM+H2+snOiWfPTvi6Grv
      4quh6dp+TCYT3/72t0VP8aVLl7h8+bKYIfrNN99EqVSKInqj0cipU6coKChgbW2NoqIizp49
      y+TkJImJibzxxhs4HI7nEsre19fHrVu3aG5uZm1tDalUis/nw263Y7PZUKlU/Omf/ikHDx5k
      fHycl19+WfQHHDlyhMnJyW21Z2BggNbWVhobG5mcnGRlZQW73f5YYN6jR48oLCwkPT2dQCCA
      zWZjbW0Ni8VCYWEh58+fZ3h4GNgyGlRBXl42+tTd5GZ1Y8rdiWz+Eb98v4ED586RkS5D2vIB
      h1/PxdM3TcOduySYUpAF3KyurJOckRWpvvE7cDqd3Lx5E5PJRGZmpljp8eLFi0xOTtLT00NS
      UhLhcJiWlhZKS0upqqpCIpFw9uxZOjo6uHfvHidPniQUCvHxxx+TkZHxXFIofv/73xczNCsU
      CqampigqKuLGjRvs3r0btVrNrVu3CIVCnD17FrfbTUxMDGlpaVRVVW17+dbz588DG9PCPXv2
      EAgEqK6u5syZMzQ3N5Oeni4Wx05NTaW0tJSrV6+KaedramrETBrwVJLICF8US0tLYirwCFsT
      CoWYnp4mKyvriYMCI5LICC80nymJ/EOHQkSI8EUSmaZHeKHZYhEc+v/be9PgNq873fOHfSMB
      EiS47zspUqQoyaJ2W7LW2FIUy4mdm8TpyaR7qr/Oh54P8+H21PSHqanqqa47Xd23by836XiL
      LduybO0kJVHcN3BfwRUkAYIACIDYt/lA8x3rxpGViErbFp8qlapI8D3nPXjPec/5///P82A1
      m/FHQKc3II6GSUjWPVaTPxzYIBCTk6h+ksNYnHDAy4rVjlqXQkpSAt+x2jdgM27ucDjw+XyC
      i0s4HMZqtSKRSEhLS8PlcuF2u0lMTCQhIQGr1UpycrIQBg2HwywvLyMSidDr9Y9Eh9RqNU6n
      E4PB8MwokX6/n0AgIIQbt/q/1f7a2hrBYFDQ7ZHJZOh0Onw+H2q1+qm1QYPBIKurq+h0OjQa
      DSsrK0SjUbKzs3G5XGxsbJCUlERSUhKwycfYGs/ExEQsFgsJCQlC/202GykpKcBjJ4CPd3/1
      NvuOvwhSCV03HnL6l2+Q9JjOrk62YvSV8L2Gr1cCi8djNH/yAdGMYpTYqKnQMW6FI7WlTzo2
      3wpYrVba29sxGAyC+K3L5WJqagqXy8Xu3bsZHBwkOTmZnJwcoa4/EAjw0ksvCXKDw8PDZGZm
      olAoMJvNWCwW8vPzkclkjI+P89prrwlGdtuJeDzO/fv32djY4PLly8TjcXp6elhfXycUCnH0
      6FF6enoQiUQsLCywtraGVCqluroav9//xBpIj2t/cHAQn88njFdfXx8ZGRmkpaXR1NQkLCxb
      E6ClpUVgqi0uLuJ0OllfX+f06dOsr6/z7rvv8ud//ufA12iDisQSZHI5Cvnmx7z2Be7dbcFF
      MheP5dM6IycnMIozbTfJbhMRURTEcSZ6m+gdXyK97AUMfhPGRTd7Dh/HO9bBlMPPodOXKEqV
      QzxCOCZlT305Mw/e51r/GlLFm4Smu1hw+indfxKZuY15XzIVVfnMDPSxFpTxvfNHab76GSJd
      Dqe/dwrtN1h8emFhQSBibJU16/V6MjIy8Pv9Qo29SqUiLS2NmZkZNBoNDocDp9NJZmYmTqeT
      hIQEYRIZDAba29uprKwkISEBv9//zFb/xcVF0tLSHiH7h0IhTp06RXt7OwqFgtOnTzM8PIxI
      JMLpdAKwsrKCVCrF5/MJ5oB/DEQiEfv378dutzM5OYnP5xO4FXK5nEAggEajQa/XC/3z+/1k
      ZmaSnp5OUVERLpeLkZER4vE4U1NTArcZvuYMIJErSU5OEiaAx27F6QszMdCPR5PG6ngXC64A
      HvMI08tBdBoJ4OX2Z02EolHmF+bZcLuRyOSI4lHcng1kMgXEYohEEk784MdUGiR8+t7HpJbV
      svfISRqyQky4U/nhD15hsLMRx6qFjKp9SK0jDM7aCDoWsbq9uDdCyOVS4rFvfhBLo9HgdDof
      oTAmJiai1Wrx+/0cOXIEjUbDvXv3OHz4MGlpaSgUCoHcUlFRQV5eHmNjY1itVtbW1lAoFE/1
      YD0pbt++jc1mY3JyEo/H84jSwtak6OzsJCUlhZqaGvbt2yfwnUOhkFCi8DTYMr2rr6+nsLCQ
      8vJy5ubmWFxc5NixY4hEItrbN6mxIpFIGM/m5mbW1tYYGxujrq5O8AszmUyYTCbga94AikQ9
      ZaUlEN6U6V5ftRCUakjRqYmLEtHFLPi1h9Ga+/AWNKAS2QAVhUWZbKiTSMvJRBGKEDLPMDI5
      S3ZyMotjo4ya7RQZlLQ3XcceECFSqElI1GIdb2Ig/xQqzySff24mKasSqaufVH0SKdI8tBob
      GTkZaOMitAYdM6O9VDUcQaf45r4C8vPzefjwIeFwmIKCAqamppBIJAwNDQnE7i33SI1Gw/Ly
      MkNDQ0ilUoEJtbGxIdTdbBlnbxlQd3d309XVhdPp5PTp09tOnnn11VcJBoMC/dBisaDRaPjo
      o49Qq9Wsrq4yMDCA3W4nFAqRnp5OLBYjMzOT/v5+8vPzn6r9WCxGU1MTlnSvqgAAIABJREFU
      iYmJbGxskJmZyeTkJC6Xi6qqKvr7+wmHw6Snp7O8vIxCoWBkZER4u96/fx+xWMzGxgZ1dXVk
      ZGTQ2dmJwbCpYPIYRlicQCC4aToQjxEMhpFKxfh8AcQSKUq1kmjQT0wsRxILE5PIkYqiROMS
      JETw+gJIFSok8TCBUBSVRk0sFCAYiaPWaJCKRYSDfvzBCAqVGqVMjM/rRSRTISWELxhFo9EQ
      j4QQy5SIRTH8Pi/hKGg0KvxeL4hlaDTqLyxZv5mIx+P4/X7BY3d0dJR9+/YJBHi1Wk0oFCIY
      DJKQkCDs/1UqFQsLC8TjcQoLC/F6vchkMpRKJeFwGJlMJqhFRyIRRCIRiYmJz2QrtEVz3CLq
      i8VifD6fwL7a4tcqlUpkMpnwGa/X+wepQvy+tn0+H5FIRBivL49dIBAgHA6jUqno7Oxk3759
      wCabTqPREAqFCIfDiEQiEhISEIvFhMNhpFIpCQkJ3zxK5HcZf6iA1zdJ8Oubji/nc/8QSuQj
      70uRSPRMIgk72ME3FTulEDt4brFDidzBc4/HJsL++f/8vzn0v/xvpK71M0kuRaoI+ux8lM+n
      SscTYStxYzQayc7OxmAw0NfXh9vt5sKFCxQWFuLz+bh+/TrxeJzz58/T0tLC8vIyVVVVhEIh
      TCYTgUCA119/ndTUVMxmM83NzWg0Gl566SUaGxsJBAKcPHlSEICqr69/JhZJsGnSZ7FYhFJk
      k8kk6Hfu27eP1tZWEhISqK2t5caNGyQkJNDQ0MDi4iIVFRV/0JlnfHycqakpzpw5g0KhIB6P
      MzExQVtbG7t37yYvL4/GxkZEIhGvvvoqY2NjjIyMcPDgQcrKygRt0NnZWaqqqnC5XJjNZkKh
      EK+++ird3d1CxAweywn209LWgcstIlvpZjqYiNxtRyKLsRGW4lhaQJmoYrirnSV3DINWutn5
      8SlkurTn2hpVJpNRX1/P/Pw89fX17Nu3D6/XS2VlJTKZDJPJREpKCgaDAY/Hg9vt5vvf/z55
      eXnk5+dTVVUlZFElEgnd3d0cPnxYUDlTKpVUVlZisViw2WxcvHiRrq4uysvLt/3A7PV6GRwc
      JBKJUF5eLlAST58+LThc6nQ67HY7Wq2WYDAoCGkVFBQ8sSjWFiQSiWCBuhVR6u7u5tVXX2V8
      fByPx0N5eTlKpZJYLMbk5CSvv/46er0esVhMPB5Hq9Wyb98+hoaGOHv2LOXl5QSDQYqLi8nP
      zycrKwur1co//dM/PV4bVJaYQ554iRl3FAgxaRwnLo1z98qvaR2zMdt6lelwEmsjzbQZR7nV
      MUKSaI2bXVNPM+bfaohEIjQaDV1dXZSVlaFQKFhbW0Oj0Qg+tuFwGL1eL3hseTwefv3rX9Pa
      2gpsZl+3HgCAgoICPv/8cxYWFsjJyWF+fp779++Tnp5Oeno677//PnNzc3+QDOGTore3l0OH
      Dj0iPS6Xy1Gr1SQkJAAIWdgtA8BAIIDf7+ejjz5iYGDgidvaqnX6ctg0FouhVqtRq9VoNBpS
      U1Npa2tjZGQEpVLJwsIC//7v/05bW5sg4S6RSGhpaRHIOHNzc+Tm5gp1U1ukHvjaalAx9Yf3
      0nO/U/iJVK5GFHERREZ4w0tSRg76BBm+QAR1koGC7HSise3XqPy2YGuFrKmpIS8vD5FIxMTE
      BJWVlcJDpFKpmJ+fZ3FxEblczv79+3nzzTdZXFwkEomwsLDwiLPi+Pg4Fy9epKCggJ6eHkpL
      Szlx4gSzs7NUV1dz6dIl0tPTn4ks4vLyMh9//PEjlMhAIMDa2hpra2uPRA1lMhknT57EYDAg
      k8k4ceIEq6urT9W+WCzG4/Fgt9sFr9/jx49TW1uL1WqlsLCQ119/HafTKaibG41GDh06RHJy
      MqFQCIvFQkFBAXa7HavVyqFDh4TF6DFbIAAJBaWVSOIhcorKSE3UII4Hya07gT68SsHB4yw8
      vI5HV8mJvcXIFGqyDHokKi2Z+sTff9nvMLb2sd3d3czNzQlSIpmZmUQiET755BMaGhqYnp4m
      EolQX1/P9PQ0Dx484NSpU4LHbkpKCktLSwwMDLB//35u3ryJQqHgxRdfZHx8nLm5OY4cOSLs
      j8+fPy98qduJ6upq6urqhK3OysoKxcXFNDc3U19fL3j42mw2YfuhVCrJz8/nwYMHHDhw4IlL
      NqLRKHfv3sVkMrGwsMD6+jqRSISSkhLu3r3LgQMHKC0t5eHDh/j9fuFBbmxspKGhgZ6eHhQK
      BRMTE/T19WGz2cjKykKtVpOUlITL5aKrqwuj0YhMJuMf/uEf/nonDPonhM/nIxQKCVWLXweH
      w4FKpfqD99HfFSwvL5OZmflE55poNIrNZvuDDDl+hxL55QKnHezguw6JRPJoJjgWi+2UQuzg
      ucJOImwHzzUem9KKRzfo75qi4oU9SAMO1rwiZBEvipR0tAoZxOOsW+cYMVkoqKghOyXhT9Xv
      bw02NjYYGRlBrVaza9cuQbIjHA5jMpkoKioSBJ5qamqQy+UMDAyQnp5OQUEBIpGI9fV1RkdH
      0ev1lJaWMjY2hkgkoqKiQnCQqa6uRqvdfo+0lZUVTCYTeXl55OXlEYvFGBkZwel0IpfLqa+v
      Z3R0FJlMRkVFBVNTU6hUKnJzc3E4HKSkpDx1biIQCDA/P09xcTGBQOCR8bRarZjNZnbv3o1C
      oXikz7t27UIkEjE4OEhCQgIVFRWMj48TjUapq6sDvuYNsD7ZymeNtxlY9OJZnaJjYIaRroeY
      XZt2RhH/Ku9/eBe9XsPdTz9mzf+lOHQ8TtO7H2B7qlv/9sPv96PX61leXsZisQCbZ63p6Wnu
      378vWABlZmby4MEDOjo60Gq1TE5Osr6+6c22ZTg3PT2N0WhkfX0dt9vN9PQ0fX19pKWl0dbW
      9kz67/P5yM7OpqenRygrTk9PJz8/n6WlJSYnJwkGg3g8HoxGI8vLy0xPT2MymYQy6adBPB5n
      ZmaG+fl5/H7/I+O5uLhIW1sbYrGYvr4+YNOExGw2k5mZSXt7O9PT0+h0OrKysgiFQpsl9vE4
      IyMjwNdMgL6eBV557RgTfcNf+fvQ8jiS4oNUVtZQoI8xbuzgZtcEGzOt3Okw0tj2kGsf3cT1
      HGsk6vV6Zmdn2djYEEjZPp8Pm81GaWkpEokEuVxOV1cXxcXFpKenMzQ0RCQSQa3eVONOT09n
      ZGSEWCyGXq8XfLQWFxfxer309/czMzPzTDzC0tLS6O7uJjk5GalUikgkErjNZWVlaLVaISy7
      vLzM2toaLpcLh8PByMiIMIn/WIhEIqqqqgQCi16vZ25ujo2NDeFNU11dLZxdJRIJ+/btIxAI
      kJuby+rqKmNjY6yvr6PT6XA6nYJ1EzxmAsSDa4wHtNQUVSFaG37kIQ47F/nte2+zQjoByyQu
      l52V9RipWhkuzwZr1hX8ikwOVlfw4pmTJD7HtUMOh4O9e/eiVCqx2+3EYjG8Xi+1tbVIJBKC
      wU3S0fHjxxkdHWV5eZkDBw4Qi8XweDzEYjFsNhtHjx4lEomgUqm4cOECBQUFZGdn8/LLL3P0
      6FEyMjKeiU3q+vo6J0+exGKxEAqFBE7w/Pw8JSUlZGZmcuHCBXJzcykpKeHixYuUlZURiUTI
      zMwUVuY/FlvJra1/DoeD+vp6lEqlYJq3RcSPxWJCIkytVlNZWUlJSQkvv/wyRqORpaUliouL
      KSwsFLzFfu+jGfH5OX7mFDKFlpMv7SOqTqGmVIoyokGdVURteRXE4/xQFOLOnRbqT32fUoOM
      1cVmzLEMqrITSU17kXtN9zGcfZnE57Q0KBqNCioFKSkpXLt2jYsXLwKbzoYajYaenh6sVivH
      jh1DoVDQ3NxMbm4ugUCAjo4OcnJyePjwIVlZWWi1WpqamkhLS6O8vJzh4WFMJhOnT59+JsQZ
      l8tFW1sbNTU1hEIhrFYrOp2OsrIyVCoVwWBQ0OevqKjA7/eTnp5OSUkJjY2NT60NGo/H6ezs
      ZGFhgeXlZaqrqzEajYK97JYfwIkTJ7h//z7l5eUsLS0xMTHB/Pw85eXl3Lt3j9raWhITE2lp
      aQHg5MmTwGMpkTvYbvj9fsLh8BMfVrfUl59Fhve7hlgsht1uJzU19elM8nYmwA6eF6jV6h1x
      3B08v9hhhO3gucdjJkCY7uabXL95h3mb59Ff+e2ML6zxVa+OoMtC0712fJHtr03/NsLlctHY
      2EhnZ6dQrx+JROjs7KSzs5NwOIzT6WR4eFjQwbx3754QpdhCIBAQIipbhhVbmp337t0T4trb
      jYWFBW7cuPGI1VEoFKK1tZX+/n5isRhzc3PcuXMHl8uF0WhkcnKSWCyGxWLZltoyn8/HwMAA
      4XAYt9stjGc0GmVkZIQHDx78ztZ9YmICu92Oy+Xizp07AsuupaWFe/fuCW46j5kAftr7pqmt
      yOaTDz7hkcuvz3G724RlopuZtUcb7my8gywtG4VkR8oDNjO+paWluFwulpaWgE1KYTgcFhhN
      s7OzLC4uEo/H6erqQq/XYzQa2djYEK7z8OFDgVwyMzNDa2srbreb5uZmMjIyhDj5diMajVJb
      W0t/f7/w0HR0dKBWq8nKysLr9dLe3k51dTUbGxs4nU4WFhYYHx/flvNkPB5ndnYWq9WK3+8n
      FAoJ4zk6OsrCwgJpaWn09vYKf+N2u3nw4AGzs7O0tLRQVlbG+Pg4drudnJwctFqtMJaPjdBL
      FWpSk5OIR8I4zKPcvP4QT1jKay9XABIskz2Ea6uZvPIr5q0bZJTWMNbbh8SZQF1pNomy7Sdo
      fNuQlJQk1K9vPaSpqal0dHQgEok4f/48qampgsldMBikurqaWCyGy+UiISGB5eVltFotycnJ
      +P1+FhYWqKmpEUqAbTYbu3fvfiYK0Xq9nitXrghCvLFYTDDq2xLz2lpZjx49itlsRiaToVar
      GR0dFVhcfyxEIhG7du0iENisPkhKSqK1tRWfz8f+/ft5+PAhFosFmUzGoUOHiMfj9Pb20tDQ
      QDgcJisri8bGRtLS0khPT6elpYW5uTkhFP3YCeCYG+D/+M89vPTLv2Z15DomR4CSjEzixAAJ
      sUgIv9dBR7eR/IpaVEkZ1NXsofDlUzsP/xfYIm93dHQIiZjl5WVeeOEFYrEYZrP5kQdkK9EU
      CAQEz6/r168DMDU1hd/vZ3l5mY2NDbxeLykpKZw8eZJr165RWVkp1MNsFzQaDT/5yU+4fv06
      fr8fpVJJcnIyhw4d4v79+8hkMurq6sjOzsZoNPKTn/yEyclJzGYz+/bto7+/X/Dj2g6IRCJe
      eeUVgaH2F3/xF7hcLnp6egBYWlqiq6sLuVyOWCymqKiIH/7wh7S1teF0Ojl27BjZ2dlPYpIn
      Jn/3YX548RDvfHCD/GO1ZIw9QCSVIJYpSVRLkYu1JCamsHdXGcthkEsliDQaZM8gI/ltxdjY
      GN3d3USjUUpKSgQjt1u3bgHw4osv8sknnzA6OorL5aKmpoZf/epXZGZmUlFRwfDwML/4xS8A
      uHPnjqBm0NvbS35+PisrK7z33ntotdpnYpLX2NjI8vIyKpWKQCAg0BA//PBD1Go1VVVVXLt2
      DaPRyOHDh9nY2CAYDFJWVsbt27ef2r94S+Whq6uLiYkJSkpKBAn5kpISPvnkExwOB+fOnWNs
      bIyMjAz+6q/+iqWlJZxOJy6Xi9/+9rckJCTgdDq5ceMG4XCYo0ePAjvCWH9SeDweFhYWBEL2
      12F+fh6ZTEZWVtYz7tm3H1uBgZqamidWN9wxydvBc43fMcnb2n/uYAfPCx6ZAPF4/Jloy+xg
      B99U7JxWd/Bc4zFRIA//z3/+vzCUVJBWUs/phqqnb81vp2vCwd660se6TT4PsFqtvPfee7z1
      1lu0tLTgdDrJzs7mxIkT9PX1MTQ0xM9//nPh8xMTE9y9e5df/vKXXLt2jWAwyMmTJxkbG2Nx
      cRGVSsXly5e3vZ+tra3MzMwgl8u5fPkyEomE3t5e+vv7ycrK4tSpU3z44YcAHDx4kPb2dtRq
      tZATqKmp2dbchNVqpampibq6OioqKnjnnXeIx+PU1tZSU1MjRI2sViuXL19mbGyMtrY2srKy
      OHfuHB6Ph3/8x3/kL//yL4GvyQOo04q4dOkSEomI4Z5e0vIyWHZGidpHMS+5MFQdpDzRw6Rl
      A3liOmrPDAMLfk6cPcnq4H2GlnwcP/kysz2NWMJaTh3aRVwqJbxu5pNbLeiL97K/RE1X+xBr
      nhCHT58mO+m7r4ETiUQYGxujrKwMsVjMK6+8gt/vp6uri42NDdbW1h6J/IRCIWZnZ8nLy2N1
      dZWsrCxqa2tRKpUYDAai0Sj3799/Jn09ePAgFRUVgvQgbGa3z58/j8FgEHIbW66QBQUFhEIh
      pqamBLHa7VSsS0tL46WXXsLtdhOPx9Hr9Rw/flzIf4hEIo4dO0ZrayvxeJzl5WV+8Ytf0NXV
      hcvlYmBggKqqKuFeHrsFcltmuH37NkbTKsnqEL9++xN0qamMjU9z7PwFBu/dwLo4Qu9ChCKt
      l4/utONeGuRuzzid3SMUFBUS91oZMa2Sn5uFNGDHOLHAjc9use/MRYIjNxkyr2DZ0FKXK2V0
      6ulk9L4N2OIDKxQKwuEwPp+PlZUVuru7OXjwIF1dXeTm5uLxeISARFtbG4WFhWxsbOByuZic
      nOTq1av09fXh8Xh4+PAhL7zwwjPpr8/no6Wl5RH7JZ1OR0dHB1euXMHtdjM1NcW1a9eYmZkR
      zP2CwSA3btwQElTbhS+/TbYMXT777DOBEy0SiR7RMd2icUqlUsGfLR6PC3zlx04AdXI6tbW1
      5KVpWV/3YEjWYLO7iUdDLM2biCkSkUjklJaXopQrScsq5Nj5yxyvyuDAoSMs9NyhaynE3t2V
      dDbdYGbNtzmAGgWL83O4w3JUMhFKpRKpVPrcHEgkEgkej0fg0XZ2dpKdnY3dbichIYHZ2VlB
      GtDtdqPVagUtUalUKiTJwuEwDx8+JCMjA5fL9UxEzRYWFqiursbpdOLxePB4PMTjcaqrq1Eq
      lWRkZKDX66moqCASiVBdXY1arUan01FSUrLtUUWv18vi4qKQ6EpKSqKyspJQKITX6yUYDGI2
      m7FaraysrCCRSOjr62NlZUUoJdkad3gsIyzCaG83zkAMbVoOKUop+tRErOsh7l/9b+RWHae8
      Zg861vFK9KQlyliZm2TO4qagsgLf4jQ2v4iKXaUsTYwSkOrYVZqFdT1Ejl6G0ThKYlYJBalS
      7G7QKkL4SMCQpN7WAfsmw263CzUzgUCApKQkdu3aJXBf/X4/drtdkPBYXV0lLS0Ns9nM6uoq
      VVVVzMzMsL6+jlKpZM+ePdvOC15cXGRxcZGcnBwMBgNerxexWMzk5CR5eXlkZmayuLiIzWYT
      /HeDwSAqlYqhoSHKysoEFentgN1uZ2Jigng8TmlpKW63G6fTSWVlJb29vezevZv5+Xm8Xi8J
      CQkCbTQ/P1+oxbLb7eh0OnQ63R9nkrdqXSHFkIHkm2zP+B2Az+dDJpPt+LY9AbbEBhISEp6O
      EhkOP8caJjt4rqBUKndKIXbw/GKHErmD5x6/3yAjHmO08w437/ehMeSgT/wKaY54nLW5QW7e
      H6egooAn2akG1pe49smnTFlCFBVmEotEnomzyX8UtvyxOjs7yczMJB6Pc+vWLVZWVsjNzUUk
      EhGJRGhubmZmZkaI7V+9ehW5XI5EIuHatWusra2Rm5uLWCwmGo3S2NjI0NAQBQUF3Lhxg46O
      DpKTk/F4PFy7do14PE5GRsa238/Y2Bg3btwgGo2SkZEh7K/n5+cxmUykp6fT3NxMb28v2dnZ
      tLe3Y7fbSUtLY35+nqSkpKdKhMXjcYaGhrh16xYSiQSDwYDf76e5uZmCggIA2tvbkcvlJCQk
      EI/HhT7rdDpWV1f5/PPPCYfDGAwGmpubMRqNFBQU8Dd/8zeP8QjzmbjW7uZHr51FEQsQ8PmJ
      EcPvCxAO+vD5vLjdTq5/eIfShjriXjc22xr+UIRYNIRjzYbHFyTk32BtzU4wvCnbd+/Ta+Qd
      /h4NRSk41hb5+//2Lzg9PsJBH2trm38fDmzg8/nY8Afxb7hYc6wTicbwedaxrTkIx77Zu7a1
      tTUhFj48PExhYSGhUEiwC5qbmyMhIYHExETBHebSpUsUFBSwvr7OuXPnEIvFOBwOYLP2PyMj
      g3PnzhEMBtHpdLz11lvk5+fj9Xp5/fXXMZlMz+ReUlJSeOONN5iZmRHOh4FAAKPRiNlsxuv1
      UlxczMGDB2lra0OpVLKxscHQ0BBqtXpbssCZmZm8/vrrTE9PEwwG6e7uZmlpSWCnbdEdYTOQ
      IxaL+dGPfsTAwADJycn86Ec/YmVlhaGhIZKSktizZ49Aifz9bwCpCttkB52ji+SWFdJztRlD
      XSZ3324h6unm7cYpdAoxHa2dyA2Z+M3D3Lp+nUG7nMhMCx2TFuJiOZ0336WloweTR0ZdaQ5q
      WYjG2424pcmk4qDxYQ/6zBxG799icnGRrqFFpOZm3utcQ6eMcfOD92jv7CSoSOT+Jx+zsOoi
      vaiURPk3c/cmEolISUnBZrMJ/+fl5ZGYmIjT6SQtLY2lpSUyMzNJTExkaWlJUDKTSqWCspnf
      76e4uBixWIzRaGRubo65uTnS09MF0nxGRgbZ2dmMjIyQkpJCenr6tt9PJBLh/fffF9TeAIaH
      h8nJycHtdlNVVYVIJGJ0dJTq6mpGRkbw+/3I5XKMRiNarfaJHXG+CiKRCJ/Px5UrV8jNzUUu
      lwt86sLCQnp6egQrVoPBgFgsJjExkb6+PoqKitBqtXz44YckJyeza9cuOjs7mZqaYt++ffzt
      3/7tY94AkTjHXnuLC4dzufppM/F4lEgwRPALtYeag6fYu7eWmuIyDjWUMTW1QkFRNuuOdaZt
      Hs6d/x61hcmYFlep3rOfyvzNLychq5L/+Zf/E+7uT1lPrqS4rJxDlenYAomcvXARsXeecCRO
      /bGzFKdGWFmXsffAAXLSDFTvLsNvX2B1/dsj3iUSiXC5XKysrKDT6YBNMzm73Y7T6USr1ZKT
      k8Obb77J2NgYs7OzeL1eGhoakEo3K1W0Wi0vv/wyRUVFrKys8Gd/9mfU19czNjbG4OAgSUlJ
      z8wjWCwW89Of/pSNjc23cjAYpKenh6amJh4+fMjKygp9fX00NDSQmZnJa6+9Rnl5OdFolEOH
      DjE5OflU7cfjcVQqFT/+8Y9xOBy0trbS09PDw4cPuX//PkNDQ9y4cYOuri6i0SixWIyenh5B
      A1QsFvPmm28SiUQYHR1l165dnDlz5gkokeENGj+7jS8Y4+jxU2Bq5dZnLSSkZpCgV5CRpNqU
      ys7LRi5VkJ6iYT0mpTDHwJF8Pdd++zbFe45y4uBehhYWKU0pAMAy3Ufb8CLS4sOUpqpZUke4
      3rvM/kotV37zDnm7T2BgArVWTkJyGft2DbBotpKeU4x7wwtSDRrlN3P1h81Q8oMHDxgcHGR6
      eprjx4/z4MEDFAoFdXV13L17l0OHDnHjxg1EIhFnz54lHo/z7rvvsmvXLkwmE4uLi4yMjHDg
      wAGcTie1tbXcvHlTqHO5ceMGwWBQ0MP0+Xxotdov6ra29zy1pTydnp5OOBxmdXWVX/7yl4RC
      IQYHB4lGo4yNjbGwsMD+/fvJz89HLpdTVVXFrVu3OHDgwFO1H4vF6OzsZHFxkby8PM6fP49U
      KqWzs5O9e/dy5swZQVHDaDSSkZHB+Pg4k5OTZGVlkZCQwNTUFOnp6YJO6ODgICdOnAB2KJF/
      UmwVum0d3r4Oy8vLKBQKUlJSnm3HvgOIRqNMT09TUlLyxIvADiVyB881focSuaMOvYPnDd/c
      zfQOdvAnwGMIMTE86+uEYyI0iVoUf6DQVTTkJyJWoJA+33MsFosJEodbNfXxeJxAIIBEIkEm
      k+H1egmFQiQmJiKVSvF4PIhEIqGwKxqN4na7USqVSCQS4XoqlQqZTIbH4yEhIeGZFM0FAgF8
      Pt8jht2RSASPxyN4F7jdbkQiEYmJifh8PiQSCUqlknA4jEwm21ZGWDwex+fzCT4LgUCAYDAo
      jB0gaKbqdDrC4TBerxeVSoVSqcTn8xGNRklMTAQeOwG8/NPf/R1ltdWshpP4s9dP/UGvi+Xu
      KwwnXeDcru13Lvw2YWlpif7+ftxuN6dOnSI9PR2XyyW4wNTV1dHR0SHEzktLS+ns7CQnJ4eG
      hgZkMhm9vb1YLBYikQgHDhxgYGAAm81GWVkZwWAQh8OBUqnk/Pnz297/4eFhrFYrHo+Hy5cv
      I5VKMRqNrKys4PV6OXnyJO3t7QSDQQoKCpifn0cul7Nv3z7W19eprKzc1v6sra3R1NSETqfj
      yJEjXLt2DZVKhcFg4PDhw/j9fm7evIlEIiErKwuJRCLkVY4ePSoI6W45xDySCNvyY9pEiJHJ
      VX742jn6uvsRh5cxDs0RkYrobb5Nh3GStLx8mq//ltGBISwhNYlhC5/fuM2cI0qqyMaaqpzS
      tO2V6vu2QavVUlxcTDAYxGAwoFarUSqVpKen4/f7BUJJMBhELpezvLxMaWmpYIckEomYnJwk
      IyODQCBAamoq9fX1+P1+KisrsVgsnDlzhvn5eQoLC7ddGzQ1NZVwOEw4HBYSc5mZmYIwbmlp
      KYmJifj9frRaLZEvSltCoRAqleqRlXk7MDo6ilarJT8/H51Oh9lsJjc3F6lUSlZWFj6fT6Bp
      Tk1NcfToUcLhMNFoFIlEQmFhIXV1dUxPT/PrX//6MYkwwDE3xDsffkZZfQPuRROyrArU9kni
      ufv5fr2Wz9qnMTsCvHLhNOa+Pu7cvYbFHWJkdIRwdEdeBTb5vL29veTm5qLX67/yM1slBrFY
      jFgshs/no7+/H6vVCiDE0v1+PxKJBIfDgVQqFbZUz8IbbAtbrkEymUxYHB0OB0NDQ+zZsweZ
      TEYoFEImk6FUKiktLSUlJYVAIIDZbH5EtXm7+uP3+5mYmGB8fBx+Hsc0AAAUyUlEQVSZTCao
      RsPmglNTU0MgECASiQgl/lKplEgkIozXVvDzsVNTX1DDT3/yEwBalh6Qlp5KUigDa0svTSIn
      xbsrGRxd5cGDNkSpBgqUUWJ+HVkZWUgjQ9t6499WjIyMsLS0JLCkPB4PSUlJdHR04HA4UCgU
      mM1mYFM6sby8HJPJRCwWIx6Ps7KyIhTYRSIR0tLS6O/vF+LdsViM27dvE4vFnolLZH9/P4FA
      gLW1NbxeL+vr67S3t6NQKBgaGiI7O5u5uTmCwaCgFepwOEhLS8NkMqHRaLa1P3l5efT19RGN
      RpHJZLhcLiQSCSKRCJvNhkqlYnV1leXlZcrKyhgcHMTr9eJwOCgqKqK3t5doNCqY9z2GERbD
      tb6BLmlzD+/fcCFWJqKQwPraKt6olPSUBP7rv/wrF1/9PvrUNBSiMKs2OyJFAnq1mLBEg0bx
      3an0/GOwpZkPm4fWsbExXnjhBaEwTqfTEQwGCQaDpKamIpfLsdlsSKVSXC4XoVCI/Px87HY7
      er0elUqFz+cTCs1CoRA2m43U1NRtV4aGTYOPLV6yRqMhFArh9/vx+XyIxWJSU1Ox2+2Cf/DW
      NloqlbK6ukpKSsq2ivbG43EcDgeRSASDwYDb7cbr9aLX6+np6RG2h+FwmPT0dEFIQKvVotVq
      hYUkNTWVhISEP44S+eXO+AMB1KrvvpTJdmBri/Oke+JIJIJYLH4mK/t3DfF4nEgkIqhAPAm+
      khIZiUSeWSd3sINvEhQKxU4pxA6eX+xQInfw3OMxm1E/t252cObscUbabqGrPkfOl3JadouF
      hDQDbocTw1d4QAWd83z82T3QpPLy6ZcR+b0kGfTPnSbo+vo6V69eRSQS8f3vfx+tVks4HObB
      gwfYbDbOnj2LTqfj5s2blJWVAZtKcGVlZezfvx+xWMzq6iqNjY3I5XLOnDmD0WhEo9FQU1PD
      9evXsdvtxGIxfv7zn297ObTRaGRgYIC8vDyOHz+OWCzGZDLR3t5Oeno6R44c4c6dO3g8Ho4f
      P87AwAAJCQns378fs9lMaWnpU1MizWYzAwMDnDx5Er/fz927d5FIJJw7d47u7m7m5+c5cOAA
      5eXlgkfYyMgIJ0+eJBgM0traSn5+PkeOHCEcDnPlyhUuXboEfI1Nqsk0B8SxLZpweLzMmiYY
      MA7g9IZYmDZhXZ7mv/z9/8vw5CzmxRUiRLAsWYjE4sx0fI6k/AwXTjUQc5j4r//lX+idmMPv
      cTLQ38eizU14w8HC0hJzSzacljn6+odxByI4V2bp6TPi9H77JVrsdjsHDhzgZz/7GVrt5gpi
      NptRKBRcvnyZxMREFhYWhBDj6Ogor732Gn6/n/X1dWCTlHLx4kUyMzNxOp1kZGQIkZYLFy7w
      xhtvUFhY+Ey41UVFRbzxxhvY7XYhD6DRaHj99deFoMnBgwc5fvw4IyMj6PV64vE4o6OjpKam
      bkuOQiaTkZKSQjgcZnp6mr1795KTk8Pq6iolJSVcuHBBcOAMBALYbDYuX74sTIRLly4JynED
      AwNEIhHhrPvEWyD/2hyfNbXjmu+jyTjL8PAQMbEUqVSKXCai6+5nzJgmuNMxRhwoOnSR6Mg1
      3v2kmZBIgkwqRS6X0nj9I5zBKFffeR/LbCf/8G4jAa+N3/z72zTf/JD37vbxyfv/zqLNjj/w
      7Z8AIpGIhw8f8pvf/AaPZ9NveetBf/vttwVyeW1tLSKRiKKiIj744APGxsYE/cqUlBRmZmYE
      u6T/kfo4ODgoqLJtN+LxOO+88w7JyclC9ColJYWBgQEKCgrQarWCeO8WgWeLPfbpp58yOjr6
      VO2LRCIyMjKEUGp2djatra2Mjo6i1+vRaDQYjUZ2794NbKrSpaSkoNFokMlk5Obm8sEHH2xy
      zL+oocrOzhau/5gJICcScOELBlhZi5KoBl1aNpUluUQimw+mJnkzjV+Un8/+vWXc/Pw+lbVV
      yMQiPN44r7z5FqVKKyOrcdJSUsnLzcDrC1JeWU1C2IcfCRX1ByhKUeKXJnHutf/Eqbp8Dr/0
      PSRr47SPLj/V4H0TkJiYyJtvvklJSYmwSiUnJ1NXV8fx48cZHBzEZDLx2Wef0draSmFhIW+8
      8QaZmZkCl3ZychKZTMa+fft+Z5UPBoN4PJ6nsiJ9HILBID/96U/xeDzCAzQ8PExWVhbl5eV4
      vV5MJhMHDx4kKSmJs2fPkpOTg1gs5sUXXxTuebswOzvL8ePHqa2tZXZ2lr6+Pg4cOCDcv1Kp
      xGq1CjmUubk53njjDRQKBSMjIwwMDHD//n1BtPcxZwAlr50/yAfvXaHw8CsUGtRsFElQ6UWU
      KrREJdWo5QoOlGXyecsA39tTSDQ2QXHupv6iOOrm0982okit4ezuYmYDczxo6ubYi8dp/vS3
      5L90nuzUKFUqPbLkZM4dKKW7vZPqgy8Ssy3ijOpoKNl+kvefGhKJhOvXr6NWq6mtreXq1at8
      73vfY35+np6eHk6dOoVOp8PhcOD1ellZWaGtrY0XXngBr9fL4OAgcrmc4eFhOjs7OXToEG1t
      bYJvbm5u7rZr8H8Zc3Nz3Lhxg9LSUmKxGDMzM6ytrWE0GlGpVDQ0NDA5OcnMzIxAiUxJSaG4
      uJgbN25w+PDhp2p/S+9/YmICk8nE4cOHaW9vRyaT8eKLL9Lb28v8/DzFxcUAVFZWUlRUxGef
      fcbZs2fxeDxcuXKFwsJCDh48iEQiEXRNYdsokWF6m5qQFdZTU2hgRzH0q+H1evH5fE/s6m6z
      2VCr1dteTvBdRDQaZXl5mZycnCdeDH6HErmTEtjB8wSxWPy7LpE7lMgdPE/YSYTt4LnGYw7B
      EWZGR3GHYmhSskhTx5AmpqHZJkU2+/IKCVmZ/HH1i3HWrRYUqZmoviL0HY/HsS3NYHWFyS8q
      Rqv6j9PXj0QiQgizoKBAoDjOzc0Rj8cpLCzE4XBgsVgoLi5GLpezsrKCwWBAqdzUY41Go0xN
      TZGUlER6ejp2ux2LxUJRUZHgiFJUVPRMzgp2ux2z2UxGRoYQfg2HwywvL5OVlYVMJmNxcZFg
      MEhhYaGQ40hLS8PtdqPT6Z46Eeb1epmdnRXa33J3KSoqYn19HYfDQUZGhqCNarfbWVpaoqCg
      ALFYzNzcHDk5Oeh0OqFydUtq5jFPs5/PP7+LVCpFIhYx2HadecdX291ENmx82tT6aMfdZjpG
      fn8IrP2Tz1h74mH4XfTf+oxZu52+wd9VHotuzPLx5z1EAx6WrA66H95m0e5/itb+eIyPj2Ox
      WBgZGcFisQCbtkMmk4nZ2VkmJiZoa2sTssMLCwuMjIywtvb/j84WLbGlpQWbzUZLS4uQhOro
      6CASifDw4cNn0n+bzQZAS0uLQNwxmUwMDAzg8/lYX1+np6cHk8nE4OAgY2NjDAwMMDc3J+h1
      Pg3i8TgTExOEw2G6uroIhUJIpVImJibY2Nigp6dn017ri4rZSCTC+Pi4ED1qb28nFArR1dWF
      0+lkfHycsbEx4fqPrcsN+z0sLy+Tpkj+4gdemj7/HLPVTeWL53AZb7MSVJOfIqaxsQ+lKonI
      cjveqIHD9VnM23Vo267TMeWg9uBRwnODTMyvUPbSpS8ut8p7711FkprLoT3F3GtqJRCTce7y
      eW79+lcoE7XoKw5SIl+lfXiOhIwq9udEudUxwdrMCmdedGGxObEvDHO3xUhAmcobF88glSiJ
      +Ww4QuXUa0X893u3YdLLD14soqm5n5hExunzp2m+/iGG7Gqy9TEGx+ZRppWzR7dB8+QyxbsO
      8mJ9yVN/gQkJCczNzRGJRFCrN+2fNBoNfr8fsViMTqdDoVBgtVpJTU2lqKiIeDz+yKrpcrlo
      aGhgdnaWsbExwuEwLpcLsVhMIBDAarViNpsF2t92Ijc3lwcPHpCcnCxcu6KiQjgrLi8v88IL
      L6DRaOjp6RFYazabjUAggMFgEDLgfwxEIhH19fVYLBaCwSCZmZmkp6cLdlF2ux273S6ENSUS
      CYcOHcJkMpGZmYnFYsFms2Gz2YjFYuzbt4/BwUHh+o/dz6iSM6irq6Mwc5PK57fN8tA4CeIY
      rrVJ5h3p/Kc3XuPA/heo3tvA6YO7cK9vsP/Ey2QoQjjWPXSbnLz5kx9Tm61hbnmVsG+VoWnL
      F3cHsXiUaCSGaWSMokNnOVOtpm/aQlim5/IPXmV+qou2xla8URE+7zqtnWOcev0N9pdmEIuG
      cLm9WJfm8QQjTI0PEQjHEKsy+bNf/pTk0Byfd8xRXbuH8+dPsTo4Tt0rr/FypYr2MQsbEQUv
      vlTPwP0HbITB43ERF0M0EiUSiT5mZJ4cbreboqIi0tPTBbXn9fV18vLyyMrKwmKxIJfLqamp
      eWTV/zLi8TixWIxQKIRcLheywQMDA5w9e5a9e/ei1WqfCW9gS9IxEol8peGdWCwWOLdarZaT
      J09SXFyM3+9Hr9djNBqfug/z8/NYLBYhETg1NUVRURESiYQf/OAH5OTk0NHRAWxOmOHhYaLR
      KHV1dZw8eZI9e/ag1+u/UjXjsW8Azxc2qWkl9agRodRnkpusJipWok3MJSH+Kb95183ho4eQ
      rE5ys30UiUpNokqByC9CJJVRro/zq1/9hrrdVdjWPaTptGyIRYhEEA/7EUmVLC9MU3LsBXoa
      P6UvHObMjw8z9OEIb7/vI73sEOnJYnrMYRISE8hP1PHJe+8RW7Zz7OgX/VxfIyJWoVFt3k50
      bYpffdqGNOold89uDBsL3Lp+i3MvZHHzyvuIowFOXGyg06pDKVVTUlFArzmMQZtIMLaBLBpi
      bNrEyy+UP/WXJ5PJ6OrqIhwOk5+fz9DQEFqtVtiyNDQ0MD09zdLSEikpKQwODnLv3j1UKhXn
      zp3D7/eTl5fHO++8g0Kh4OLFi9y8eZPp6Wn27dtHf38/4+PjVFZWPpNkWGNjI6urq4hEIrxe
      L1arFavVyoMHD0hNTeXChQt89NFHgt+xSCQiGAySl5fHvXv3nrpEIxaLCYWAZrOZkydPYrVa
      OXLkCKFQiLt37+L3+ykvL2d+fh6FQkFTUxN6vR6z2Uxqair9/f1kZ2cTiUT4/PPPWVhYECbD
      UzHCnh08/Oq/3+Ctn//wP7oj2wqPx8PU1BT19fVP9PmZmRmkUqnwet/B70c0GqW7u5v6+von
      pmD+DiPsmzMBdrCDZw+NRvNoIkwsFm8rgXkHO/imY4cSuYPnFjuUyB089/j9HmF4+fv//X8l
      mHeUbLmHf/y7vyWaXkmO/n/INkb93PjtdQzVFSi/9Lfvv/c51dXbqwv5bcCWS2FTUxOFhYWC
      3OHbb79NXV0dYrEYi8XCRx99xOTkJLm5ufT399PV1UV5eTmLi4vcunULvV4vCLiazWZ+85vf
      MD09TUpKClevXmVkZITs7Gx6e3tpbGzEZrMJJcHbiYGBAW7evInJZKK8vByxWMzAwABXr15l
      eXmZlJQUPvzwQ0ZHR0lLS+P69evMz8+TlpbG9PQ0BoPhqaJTsViMhw8f0tjYiNVqRalUcvXq
      VYxGI0VFRXR1ddHc3IxKpSI1NZV4PE5zczN3795Fo9EwOzvL7du3WVhYQC6X8+mnn9La2ko4
      HOZf//Vf//oxYdAo8eR0rMNG1uVaxGI1nkAEy7SRjtEVDhx/ieTYGnebWxkas1Flt+CPaZD7
      HZCagN3uJOK303ynBVFqIQ27slhYXsUXEFNXW8l3WTQ6Pz+fjY0NotEo0WiU4eFhgSoIsLi4
      KITxFhcXqa6uFur7DQYD1dXVX9Jo3RSEvXTpEpmZmYyOjlJbW4tWq8VkMmG32/nRj37E3bt3
      n8m9FBcXs2vXLhobG4VEm9/v5/XXX0ev19Pb28uhQ4dQKpX09fWRm5tLMBhkbGyMXbt2PXVo
      ViQSceDAAWpra7l37x4LCwscPHgQh8OBzWbD4XDws5/9TPi8z+cjFovx1ltvcfv2bU6fPi30
      PyMjg7feeovW1laqqqqAr0mEiRXpiCKrrMyZySzJI76xyKcPpjhQn8eHv/2c99/9gF0Hj5GV
      pMJhNjG9aGdpdJhllw+AWNiPxbpM46dvYxyd5Mr1e2Tl5yH5DhMGRCIRGo1GSEpNTExQUlIi
      ZIFhM5Pa19fHgwcPBGnzrQdlS/L8y0hISODmzZv88z//M2lpaczMzHD37l1cLhcpKSm89957
      z0QaHTYZVs3NzVRVVQltSKVSPv74Y959910qKioYGBjg7t27Qg4gHA7j9/t599136e7ufqr2
      t0wGP/74Y5KTk8nNzaW9vZ2RkREUCgUzMzP827/9G01NTcTjcUE2XS6XC5nyK1euoFKpkMvl
      gtHflmHh49dhkYQylZe7y0oKdZtp8LhI9MWXGycUFaGQiYjEYohEMbweN6s2O1uyuPP9zcgr
      TnKgIoNYLE5hVS2Zeg3PUMv1PxzxeFyQOgwEAtjtdu7fvy+wmrayuSdPniQnJ4fs7Gz8fr/w
      +S3pQb/fTyQSIRwOC6T4wsJC3G43x44do7CwkMzMTFZXV7l06RJOp/OZiJo9ePCA2tpaUlJS
      BKFZnU7Ha6+9hkKhIBwOc+LECfLy8igqKuLIkSMkJyejVqs5fvw4brf7qdqPxWJ4vV4uXbqE
      w+FgeHiYhoYGdu3axdraGkVFRVy4cEEQw1WpVJjNZsxmM5FIBKfTycWLFwmHwzidTkZHRwVr
      V3hsFCjE0JCJsmwNQxYRRbowXmU6UscE7cMrNJw4icY7T1PXBCmp+dTVZdN5rw21PoeK2jKW
      ZxYpL0jmTlMPSRmpFObl4QmJKM/PfKoB+abjy66GarWaEydOoFarBY/fmzdvcurUKZqamigo
      KKCqqorGxkZcLhfJyclkZWUxMjKCVCqluLiYjY0NqquruXfvHtnZ2ezatYvm5mYMBgN79+5l
      aWmJrq4uamtrBR/f7UR7ezuLi4solUoOHz4saIJ2dnZSXV1Nfn4+t27dIisri7179wq6oYmJ
      iTQ1NdHQ0EBycvIf3X4sFhMcN3fv3i3UJsnlco4ePYrFYqGnp4eDBw8yNDREXV0dPp8Po9HI
      yy+/zMLCAsPDw5SXl1NdXc3CwgI5OTlbgro7ynB/SmyJtj5pcZjL5UKpVD4T0dvvGmKxGA6H
      g5SUlKejRMZiO7r+O3g+IJVKRf8fh/xM6AT8o34AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard Profit' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard Sales' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='30' name='Month' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Pi Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='65' name='Profit' width='104'>
      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
    </thumbnail>
    <thumbnail height='192' name='Profit Margin by markets' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Profit Trend' width='192'>
      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
    </thumbnail>
    <thumbnail height='65' name='Quantity' width='164'>
      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
    </thumbnail>
    <thumbnail height='65' name='Revenue' width='164'>
      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
      83Ym/ylatQGT3kYwMsvVsVPJ4TguRoD5ZYi4GGV0ph1PwAHMZ+yt/c/z+tX/XNO2q1Ua9tU9
      QXXBXly+YU52/jDl7pEgCLx+9ef0OZqT7RPFGC7vEOe6n2V0UVatEtRU2+8jEvMz5rrE0FQL
      Wo0xZRkHoGwh20633pUgoEIQBGb9Y8kM3hN00tJ/hDHXpZRrDVorBVl1eAIOzlz+t5QVkmgs
      yPDUW5zpeoZAOP3pgywiZJ61mm2l76Vt8De80fNL3uj5Zcr5wqw6aov3J19rNUbsts1Mzl2j
      ffAo7YNHgbfXIXMsFVhMdma8gxx5/SvJcoIgYNBa17z9apWGvVs+DUj0OZo52flDHrjrixi0
      Fqrs93HNcZbTXT/mdNfSskXZ21Je222bsRjtXB45jijGyLGUYzMXpVxTnN2w4nrTJTujBKPO
      hts/xpHmLyePC4IKQUiNX4IgsL38ERyzVxl3dfG/F/52SX1mfTYSS0ex6yGLCCkIAo2VhznU
      +BVyLZXJjpv0WeyseYwH7/oyeo05pUxT5aM0lD+cXNpQqTTotOaFcjYONvwledZqBEGFSqWh
      MKue9+34GrtrP7EufdCodeze/ElKcxuZnOvltfZ/IRT1sq/uCfbVfZZMU2GyX2qVjsKsOg40
      PEl57o6Ueow6G/bMWgJhN6Golyr77uT8N0EiKq+k3nRJZMgWY16yzkr7bj606x+XrdNizOcD
      O79OfekhDLq3v+wGnZWagr082PjXmHTpD+XCzdzPlF2HCrcTWURIBYUEiiAVZIUiSAVZoQhS
      QVYoglSQFYogFWSFIkgFWaEIUkFWKIJUkBWKIBVkhSJIBVmhCFJBViiCVJAVsngeMsH1vHNu
      hFmfvWKDKE/AwfmeXzDm6mD/ti+k7DFOMDl3jVfavk00FkyrzqbKwyluHTdDkkSGpi7SMfQi
      Lt8IohhDpdJgNeZTZd9DfemD192H4vaN0jZ4lNGZdqKxIIIgYNTZKMqqp6H8kSX7ev5wL3tt
      0X721X3mum0TpTgnOp5mZLpt1f1bLbIS5HoTini52PccvRO/X3brw62g06a3iQnm9zKf6Xom
      5R8O8098z/rHaek/Qqa5cMkXRZIkLg2/TEv/EeKLNq1JkkQg7Oaa4xxxMXpTu5ppTx/hqC91
      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
    </thumbnail>
    <thumbnail height='192' name='Revenue By Market' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Revenue By Year' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='179' name='Sales Quantity by Markets' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 5 Customers' width='192'>
      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
      Etf8P4iZ9ttwN1obAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Top 5 Products' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='30' name='Year' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAAeCAYAAAB66BFYAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAF6klEQVR4nO2ce2xTVRzHP3el6+OytXQvdC/mgA0Kg0CYSFATDEODEQRRRPERQQV8gvII
      +I+EuCGiiUHQmZBIIAphChF5hYeYwHgtGyAD5ixsDsa2DrbSrd1duf6xbjAFXct6Sej5JE3a
      e8899/dtz/f8zuOmkqqqKgJBmBJxtwMQCO4mwgCCsEYYQBDWCAMIwhphAEFYIwwgCGuEAQRh
      jTCAIKwRBhCENcIAgrBGGEAQ1ggDCMKaHsFcpHr/5OrOpVwuKcLrbgJ9LKaBH5D8zGRM+vZS
      XpqPLKHil214PAoR8jCsE1aSlJWI9I/6rjcUUrt5AZfPjSQ1Nw9L+4nfF1CyruA2UdjpPfcn
      EuKDURAYmukF8FVxddsSLhUdpsWjIBnTMQ+bS8r4HCJ195hW5QJXts7nYnERrYoeXcwY4qYs
      I6GPBa0IwgAOalaPo7r6pkNKHc0lCylrVMh8YyqRgOfXFynbXkz7o6bX3UXUbxiLohzigeF+
      gcoFrmx9m7+OlnI94Dj0SBo0CG31VlP37ViqHErHEdVTjvvgHM5cWtpxr9ChpVYHNWvGc6mq
      XauCz7mT6jVFKDMOkNQ3qL45QBzBDoHMGEbk0XdBMVm5ZQx+Zx4mHaiO7TQ2Ar5D1O4vRiUO
      67RCsnJPkTlxLDoUXD9/ictfi+e3d6k4WopqtNw6EHseQ3LLOr0GPDkCAGngK8TEBBd94Gik
      17mdeocCpqdIXnSKIbllDF60EosJVMdmrjrvIa1/rKemSgF5EqmLSxmyrJD0R4YiUYtz1/e0
      aCGVoOYA8dheO0Lm5EnIvWQkICJhJHLPm4o49tDQDKTM5r6sGCQMGEbOwmYBmgtxt/cwkf2w
      TdrCgI+WE92VW/uOULPvKBCHbdQ4NEkAWuq12jHLAM1c7+gYm9t6UHkIJmtoFN5AO63eqhJ8
      QGT2q1ijeoAuhp7j5tLLBFQc5JontErbiA/GADL6KMONj8oFnOtnU9cAUtoTREeD2nQFHyDF
      ptyUsgcjpwGcxevvyYyjPyU5eyD6LrZk34l11LuBlNnEa5IiQVO9umwSZy4lSr+fqhWDKFnY
      j5MrFnNNP4bEmQuJCrnjtdNqiO+PBLQcWcuVBi8AaqsZXRTARZTG7lf3b+TgJsHttJ7Pp2LD
      57gaFaToZ0md7h8j1pUDYIhN7o4o/ZRSs3sHKlasjz4d4rHwrdFCr8/jus1xN6Dd5DDkWvtP
      wCZvxOkuoOKTAio6nWy6kQFDTJBzAC/Ne5+ndM1yXI2gH5RHxofLsJjbzhpi09tK1VV2U5ig
      ntuIsx6wvUScXe62eruGRno926jMX47LbSdhTjFZuaUMmjMPo3sv1flLqNdkWKCRVl02iXNW
      YUuK9TdCMz2SHsRkansfof/Pq7uNoDJA6/H3Kdt1DFU/gNgX1nJ/Zkyn5S/J3Asd4KuroAX8
      vfVJ3A6ADAwBT16rce77AR965IenYA4m6DtAM73lB2j0AUNn0Tu5zeS65DdJGPwZ54t34CoH
      m73bZN0SLX9byZZD8ls5dOSSpgLKPz4MugyMGi1wBJEBSqndsxuVNOJeLyDxH18QAGmPYTEB
      FV9x6YQTFS/ewtXUNwC2cUT3DvCWVZuodShgeo6E7EAvvlM01BudgB7g5GqqK92otOKrXMPl
      kwBJ6Lu0UnAnaPnb1uI6vp/mJv/433uK2g0ruAbohk8kWpMVjlKkgP8VoiafsyuXc+tsfGNz
      quXQy5zZcpDOlcdhnb6dVLsFcHD5i5zOa843YZ1eRqodwE39dyOoPK1gzNlFxpi0gMK9YzTV
      W03d12M67QO0I6VpsA+gqdbblJEn0WdeXseQK6TU5AeRAbwufF0oFvnQN2RMnYbR2DaYi5CH
      YZu2iRR7gBO5qz/iPK2A7nHiRmnc+EFjvb2JnbGb1FGjifTXIxnTkUetInNGqDfB0FhrPGb7
      aAyyv6XrLEQOmE/6e8u0afwAXlcQGUAguIcQD8MJwhphAEFYIwwgCGuEAQRhzf9uhB07dkyL
      OASCu8LfPcBsLFVk8FsAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
